{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _taggedTemplateLiteralLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/taggedTemplateLiteralLoose\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _native = _interopRequireWildcard(require(\"styled-components/native\"));\n\nrequire(\"react-native-gesture-handler\");\n\nvar _reactNative = require(\"react-native\");\n\nvar _theme = require(\"../../components/theme\");\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _IconButton = _interopRequireDefault(require(\"../../components/Main/IconButton\"));\n\nvar _reactNativeElements = require(\"react-native-elements\");\n\nvar _image = require(\"../../components/Main/image\");\n\nvar _Inputnames = _interopRequireDefault(require(\"../../components/SubjectInput/Inputnames\"));\n\nvar _Task = _interopRequireDefault(require(\"../../components/SubjectInput/Task\"));\n\nvar _expoAppLoading = _interopRequireDefault(require(\"expo-app-loading\"));\n\nvar _asyncStorage = _interopRequireDefault(require(\"@react-native-community/async-storage\"));\n\nvar _templateObject,\n    _this = this,\n    _jsxFileName = \"D:\\\\merge\\\\please-attendence\\\\src\\\\navigation\\\\pages\\\\InputSubject.js\",\n    _templateObject2,\n    _templateObject3;\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nvar List = _native.default.ScrollView(_templateObject || (_templateObject = (0, _taggedTemplateLiteralLoose2.default)([\"\\n    flex: 1;\\n    width: \", \"px;\"])), function (_ref) {\n  var width = _ref.width;\n  return width - 40;\n});\n\nvar InputSubject = function InputSubject(_ref2) {\n  var navigation = _ref2.navigation;\n\n  var _useState = (0, _react.useState)(false),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      isReady = _useState2[0],\n      setIsReady = _useState2[1];\n\n  var _useState3 = (0, _react.useState)(''),\n      _useState4 = (0, _slicedToArray2.default)(_useState3, 2),\n      newTask = _useState4[0],\n      setNewTask = _useState4[1];\n\n  var _useState5 = (0, _react.useState)({}),\n      _useState6 = (0, _slicedToArray2.default)(_useState5, 2),\n      tasks = _useState6[0],\n      setTasks = _useState6[1];\n\n  var width = _reactNative.Dimensions.get('window').width;\n\n  var _addTask = function _addTask() {\n    alert(\"Add: &{newTask}\");\n    setNewTask('');\n  };\n\n  var _handleTextChange = function _handleTextChange(text) {\n    setNewTask(text);\n  };\n\n  return _react.default.createElement(_native.ThemeProvider, {\n    theme: _theme.theme,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, _react.default.createElement(Container, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, _react.default.createElement(_reactNative.StatusBar, {\n    barStyle: \"light-content\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }), _react.default.createElement(Title, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }, \"Input lectures\"), _react.default.createElement(_Inputnames.default, {\n    placeholder: \"+ Add subjects\",\n    value: newTask,\n    onChangeTest: _handleTextChange,\n    onSubmitEditing: _addTask,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  }), _react.default.createElement(List, {\n    width: width,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  }, _react.default.createElement(_Task.default, {\n    text: \"System SW Practice\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 21\n    }\n  }))));\n};\n\nvar Container = _native.default.View(_templateObject2 || (_templateObject2 = (0, _taggedTemplateLiteralLoose2.default)([\"\\n    flex: 1;\\n    align-items: center;\\n    justify-content: center;\\n    background-color: #101010;\\n\"])));\n\nvar Title = _native.default.Text(_templateObject3 || (_templateObject3 = (0, _taggedTemplateLiteralLoose2.default)([\"\\n    font-size: 40px;\\n    font-weight: 600;\\n    color: #63855d;\\n    align-self: flex-start;\\n    margin: 20px;\"])));\n\nvar _default = InputSubject;\nexports.default = _default;","map":{"version":3,"sources":["D:/merge/please-attendence/src/navigation/pages/InputSubject.js"],"names":["List","styled","ScrollView","width","InputSubject","navigation","isReady","setIsReady","newTask","setNewTask","tasks","setTasks","Dimensions","get","_addTask","alert","_handleTextChange","text","theme","Container","View","Title","Text"],"mappings":";;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAEA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;;;AAEA,IAAMA,IAAI,GAAGC,gBAAOC,UAAV,2HAEG;AAAA,MAAEC,KAAF,QAAEA,KAAF;AAAA,SAAaA,KAAK,GAAG,EAArB;AAAA,CAFH,CAAV;;AAKA,IAAMC,YAAY,GAAG,SAAfA,YAAe,QAAkB;AAAA,MAAhBC,UAAgB,SAAhBA,UAAgB;;AACnC,kBAA8B,qBAAS,KAAT,CAA9B;AAAA;AAAA,MAAOC,OAAP;AAAA,MAAgBC,UAAhB;;AACA,mBAA8B,qBAAS,EAAT,CAA9B;AAAA;AAAA,MAAOC,OAAP;AAAA,MAAgBC,UAAhB;;AACA,mBAA0B,qBAAS,EAAT,CAA1B;AAAA;AAAA,MAAOC,KAAP;AAAA,MAAcC,QAAd;;AAEA,MAAMR,KAAK,GAAGS,wBAAWC,GAAX,CAAe,QAAf,EAAyBV,KAAvC;;AAEA,MAAMW,QAAQ,GAAG,SAAXA,QAAW,GAAM;AACnBC,IAAAA,KAAK,mBAAL;AACAN,IAAAA,UAAU,CAAC,EAAD,CAAV;AACH,GAHD;;AAKA,MAAMO,iBAAiB,GAAG,SAApBA,iBAAoB,CAAAC,IAAI,EAAI;AAC9BR,IAAAA,UAAU,CAACQ,IAAD,CAAV;AACH,GAFD;;AAIA,SACI,6BAAC,qBAAD;AAAe,IAAA,KAAK,EAAIC,YAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,6BAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,6BAAC,sBAAD;AACI,IAAA,QAAQ,EAAC,eADb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAII,6BAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJJ,EAKI,6BAAC,mBAAD;AACI,IAAA,WAAW,EAAG,gBADlB;AAEI,IAAA,KAAK,EAAIV,OAFb;AAGI,IAAA,YAAY,EAAIQ,iBAHpB;AAII,IAAA,eAAe,EAAIF,QAJvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,EAUI,6BAAC,IAAD;AAAM,IAAA,KAAK,EAAIX,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,6BAAC,aAAD;AAAa,IAAA,IAAI,EAAG,oBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAVJ,CADJ,CADJ;AAkBH,CAlCD;;AAoCA,IAAMgB,SAAS,GAAGlB,gBAAOmB,IAAV,kMAAf;;AAOA,IAAMC,KAAK,GAAGpB,gBAAOqB,IAAV,4MAAX;;eASelB,Y","sourcesContent":["import React from \"react\";\r\nimport styled, {ThemeProvider} from 'styled-components/native'\r\nimport 'react-native-gesture-handler';\r\nimport { Dimensions, StatusBar, Text } from \"react-native\";\r\nimport { theme } from \"../../components/theme\";\r\nimport PropsTypes from 'prop-types'\r\nimport { useState } from \"react\";\r\nimport IconButton from \"../../components/Main/IconButton\";\r\nimport { Icon } from \"react-native-elements\";\r\nimport { images } from \"../../components/Main/image\";\r\nimport Inputs from \"../../components/SubjectInput/Inputnames\";\r\nimport SubjectTask from \"../../components/SubjectInput/Task\";\r\nimport AppLoading from \"expo-app-loading\";\r\nimport AsyncStorage from \"@react-native-community/async-storage\";\r\n\r\nconst List = styled.ScrollView`\r\n    flex: 1;\r\n    width: ${({width}) => width - 40}px;`\r\n\r\n\r\nconst InputSubject = ({navigation}) => {\r\n    const [isReady, setIsReady] = useState(false);\r\n    const [newTask, setNewTask] = useState('');\r\n    const [tasks, setTasks] = useState({});\r\n\r\n    const width = Dimensions.get('window').width;\r\n\r\n    const _addTask = () => {\r\n        alert(`Add: &{newTask}`);\r\n        setNewTask('');\r\n    }\r\n\r\n    const _handleTextChange = text => {\r\n        setNewTask(text);\r\n    }\r\n\r\n    return(\r\n        <ThemeProvider theme = {theme}>\r\n            <Container>\r\n                <StatusBar \r\n                    barStyle='light-content'     \r\n                />\r\n                <Title>Input lectures</Title>\r\n                <Inputs \r\n                    placeholder = \"+ Add subjects\"\r\n                    value = {newTask}\r\n                    onChangeTest = {_handleTextChange}\r\n                    onSubmitEditing = {_addTask}/>\r\n                <List width = {width}>\r\n                    <SubjectTask text = \"System SW Practice\" />\r\n                </List>\r\n            </Container>\r\n        </ThemeProvider>\r\n    );\r\n};\r\n\r\nconst Container = styled.View`\r\n    flex: 1;\r\n    align-items: center;\r\n    justify-content: center;\r\n    background-color: #101010;\r\n`;\r\n\r\nconst Title = styled.Text`\r\n    font-size: 40px;\r\n    font-weight: 600;\r\n    color: #63855d;\r\n    align-self: flex-start;\r\n    margin: 20px;`\r\n\r\n\r\n\r\nexport default InputSubject;\r\n\r\n/*\r\n           <Button \r\n            title = \"move to calandar\"\r\n            onPress = {() => navigation.navigate('FirstSetting')} />\r\n            */\r\n"]},"metadata":{},"sourceType":"script"}