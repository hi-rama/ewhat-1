{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _taggedTemplateLiteralLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/taggedTemplateLiteralLoose\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _native = _interopRequireWildcard(require(\"styled-components/native\"));\n\nrequire(\"react-native-gesture-handler\");\n\nvar _reactNative = require(\"react-native\");\n\nvar _theme = require(\"../../components/theme\");\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _IconButton = _interopRequireDefault(require(\"../../components/Main/IconButton\"));\n\nvar _reactNativeElements = require(\"react-native-elements\");\n\nvar _image = require(\"../../components/Main/image\");\n\nvar _Inputnames = _interopRequireDefault(require(\"../../components/SubjectInput/Inputnames\"));\n\nvar _Task = _interopRequireDefault(require(\"../../components/SubjectInput/Task\"));\n\nvar _expoAppLoading = _interopRequireDefault(require(\"expo-app-loading\"));\n\nvar _reactNativeWeb = require(\"react-native-web\");\n\nvar _templateObject,\n    _this = this,\n    _jsxFileName = \"D:\\\\folder\\\\please-attendence\\\\src\\\\navigation\\\\pages\\\\InputSubject.js\",\n    _templateObject2,\n    _templateObject3;\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nvar List = _native.default.ScrollView(_templateObject || (_templateObject = (0, _taggedTemplateLiteralLoose2.default)([\"\\n    flex: 1;\\n    width: \", \"px;\"])), function (_ref) {\n  var width = _ref.width;\n  return width - 40;\n});\n\nvar InputSubject = function InputSubject(_ref2) {\n  var navigation = _ref2.navigation;\n\n  var _useState = (0, _react.useState)(false),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      isReady = _useState2[0],\n      setIsReady = _useState2[1];\n\n  var _useState3 = (0, _react.useState)(''),\n      _useState4 = (0, _slicedToArray2.default)(_useState3, 2),\n      newTask = _useState4[0],\n      setNewTask = _useState4[1];\n\n  var _useState5 = (0, _react.useState)({}),\n      _useState6 = (0, _slicedToArray2.default)(_useState5, 2),\n      tasks = _useState6[0],\n      setTasks = _useState6[1];\n\n  var width = _reactNative.Dimensions.get('window').width;\n\n  var _saveTasks = function _saveTasks(tasks) {\n    return _regenerator.default.async(function _saveTasks$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regenerator.default.awrap(_reactNative.AsyncStorage.setItem('tasks', JSON.stringify(tasks)));\n\n          case 3:\n            setTasks(tasks);\n            _context.next = 9;\n            break;\n\n          case 6:\n            _context.prev = 6;\n            _context.t0 = _context[\"catch\"](0);\n            console.error(_context.t0);\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 6]], Promise);\n  };\n\n  var _loadTasks = function _loadTasks() {\n    var loadedTasks;\n    return _regenerator.default.async(function _loadTasks$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regenerator.default.awrap(_reactNative.AsyncStorage.getItem('tasks'));\n\n          case 2:\n            loadedTasks = _context2.sent;\n            setTasks(JSON.parse(loadedTasks || '{}'));\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var _addTask = function _addTask() {\n    var ID = Date.now().toString();\n    var newTaskObject = (0, _defineProperty2.default)({}, ID, {\n      id: ID,\n      text: newTask,\n      completed: false\n    });\n    setNewTask('');\n\n    _saveTasks((0, _extends2.default)({}, tasks, newTaskObject));\n  };\n\n  var _deleteTask = function _deleteTask(id) {\n    var currentTasks = (0, _extends2.default)({}, tasks);\n    delete currentTasks[id];\n\n    _saveTasks(currentTasks);\n  };\n\n  var _toggleTask = function _toggleTask(id) {\n    var currentTasks = (0, _extends2.default)({}, tasks);\n    currentTasks[id]['completed'] = !currentTasks[id]['completed'];\n\n    _saveTasks(currentTasks);\n  };\n\n  var _updateTask = function _updateTask(item) {\n    var currentTasks = (0, _extends2.default)({}, tasks);\n    currentTasks[item.id] = item;\n\n    _saveTasks(currentTasks);\n  };\n\n  var _handleTextChange = function _handleTextChange(text) {\n    setNewTask(text);\n  };\n\n  var _onBlur = function _onBlur() {\n    setNewTask('');\n  };\n\n  return isReady ? _react.default.createElement(_reactNativeWeb.View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, _react.default.createElement(_reactNative.StatusBar, {\n    barStyle: \"light-content\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }\n  }), _react.default.createElement(Title, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }\n  }, \"Input lectures\"), _react.default.createElement(_Inputnames.default, {\n    placeholder: \"+ Add subjects\",\n    value: newTask,\n    onChangeTest: _handleTextChange,\n    onSubmitEditing: _addTask,\n    onBlur: _onBlur,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }\n  }), _react.default.createElement(List, {\n    width: width,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }\n  }, Object.values(tasks).reverse().map(function (item) {\n    return _react.default.createElement(_Task.default, {\n      key: item.id,\n      item: item,\n      deleteTask: _deleteTask,\n      toggleTask: _toggleTask,\n      updateTask: _updateTask,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 25\n      }\n    });\n  }))) : _react.default.createElement(_expoAppLoading.default, {\n    startAsync: _loadTasks,\n    onFinish: function onFinish() {\n      return setIsReady(true);\n    },\n    onError: console.error,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  });\n};\n\nvar Container = _native.default.View(_templateObject2 || (_templateObject2 = (0, _taggedTemplateLiteralLoose2.default)([\"\\n    flex: 1;\\n    align-items: center;\\n    justify-content: center;\\n\"])));\n\nvar Title = _native.default.Text(_templateObject3 || (_templateObject3 = (0, _taggedTemplateLiteralLoose2.default)([\"\\n    font-size: 40px;\\n    font-weight: 600;\\n    color: #63855d;\\n    align-self: flex-start;\\n    margin: 20px;\"])));\n\nvar _default = InputSubject;\nexports.default = _default;","map":{"version":3,"sources":["D:/folder/please-attendence/src/navigation/pages/InputSubject.js"],"names":["List","styled","ScrollView","width","InputSubject","navigation","isReady","setIsReady","newTask","setNewTask","tasks","setTasks","Dimensions","get","_saveTasks","AsyncStorage","setItem","JSON","stringify","console","error","_loadTasks","getItem","loadedTasks","parse","_addTask","ID","Date","now","toString","newTaskObject","id","text","completed","_deleteTask","currentTasks","_toggleTask","_updateTask","item","_handleTextChange","_onBlur","Object","values","reverse","map","Container","View","Title","Text"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport styled, {ThemeProvider} from 'styled-components/native'\r\nimport 'react-native-gesture-handler';\r\nimport { Dimensions, StatusBar, Text } from \"react-native\";\r\nimport { theme } from \"../../components/theme\";\r\nimport PropsTypes from 'prop-types'\r\nimport { useState } from \"react\";\r\nimport IconButton from \"../../components/Main/IconButton\";\r\nimport { Icon } from \"react-native-elements\";\r\nimport { images } from \"../../components/Main/image\";\r\nimport Inputs from \"../../components/SubjectInput/Inputnames\";\r\nimport SubjectTask from \"../../components/SubjectInput/Task\";\r\nimport AppLoading from \"expo-app-loading\";\r\nimport { AsyncStorage } from \"react-native\";\r\nimport { View } from \"react-native-web\";\r\n\r\nconst List = styled.ScrollView`\r\n    flex: 1;\r\n    width: ${({width}) => width - 40}px;`\r\n\r\n\r\nconst InputSubject = ({navigation}) => {\r\n    const [isReady, setIsReady] = useState(false);\r\n    const [newTask, setNewTask] = useState('');\r\n    const [tasks, setTasks] = useState({});\r\n\r\n    const width = Dimensions.get('window').width;\r\n\r\n    const _saveTasks = async tasks => {\r\n        try {\r\n          await AsyncStorage.setItem('tasks', JSON.stringify(tasks));\r\n          setTasks(tasks);\r\n        } catch (e) {\r\n          console.error(e);\r\n        }\r\n      };\r\n      const _loadTasks = async () => {\r\n        const loadedTasks = await AsyncStorage.getItem('tasks');\r\n        setTasks(JSON.parse(loadedTasks || '{}'));\r\n      };\r\n    \r\n      const _addTask = () => {\r\n        const ID = Date.now().toString();\r\n        const newTaskObject = {\r\n          [ID]: { id: ID, text: newTask, completed: false },\r\n        };\r\n        setNewTask('');\r\n        _saveTasks({ ...tasks, ...newTaskObject });\r\n      };\r\n      const _deleteTask = id => {\r\n        const currentTasks = Object.assign({}, tasks);\r\n        delete currentTasks[id];\r\n        _saveTasks(currentTasks);\r\n      };\r\n      const _toggleTask = id => {\r\n        const currentTasks = Object.assign({}, tasks);\r\n        currentTasks[id]['completed'] = !currentTasks[id]['completed'];\r\n        _saveTasks(currentTasks);\r\n      };\r\n      const _updateTask = item => {\r\n        const currentTasks = Object.assign({}, tasks);\r\n        currentTasks[item.id] = item;\r\n        _saveTasks(currentTasks);\r\n      };\r\n    \r\n      const _handleTextChange = text => {\r\n        setNewTask(text);\r\n      };\r\n      const _onBlur = () => {\r\n        setNewTask('');\r\n      };\r\n    return isReady ? (\r\n        <View>\r\n                <StatusBar \r\n                    barStyle='light-content'     \r\n                />\r\n                <Title>Input lectures</Title>\r\n                <Inputs \r\n                    placeholder = \"+ Add subjects\"\r\n                    value = {newTask}\r\n                    onChangeTest = {_handleTextChange}\r\n                    onSubmitEditing = {_addTask}\r\n                    onBlur = {_onBlur}/>\r\n                <List width = {width}>\r\n                    {Object.values(tasks).reverse().map(item => (\r\n                        <SubjectTask \r\n                        key={item.id}\r\n                        item={item}\r\n                        deleteTask={_deleteTask}\r\n                        toggleTask={_toggleTask}\r\n                        updateTask={_updateTask} />\r\n                    ))}\r\n                </List>\r\n            </View>\r\n    ) : (\r\n        <AppLoading \r\n        startAsync={_loadTasks}\r\n        onFinish={() => setIsReady(true)}\r\n        onError={console.error} />\r\n    );\r\n};\r\n\r\nconst Container = styled.View`\r\n    flex: 1;\r\n    align-items: center;\r\n    justify-content: center;\r\n`;\r\n\r\n\r\n\r\nconst Title = styled.Text`\r\n    font-size: 40px;\r\n    font-weight: 600;\r\n    color: #63855d;\r\n    align-self: flex-start;\r\n    margin: 20px;`\r\n\r\n\r\n\r\nexport default InputSubject;\r\n\r\n/*\r\n           <Button \r\n            title = \"move to calandar\"\r\n            onPress = {() => navigation.navigate('FirstSetting')} />\r\n            */\r\n"]},"metadata":{},"sourceType":"script"}