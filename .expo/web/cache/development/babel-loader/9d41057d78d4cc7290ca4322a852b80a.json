{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _todo = _interopRequireDefault(require(\"../component/todo\"));\n\nvar _reactNativeElements = require(\"react-native-elements\");\n\nvar _jsxFileName = \"D:\\\\merge\\\\please-attendence\\\\src\\\\components\\\\todolist.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar _Dimensions$get = _reactNative.Dimensions.get('window'),\n    width = _Dimensions$get.width;\n\nvar TodoList = function (_React$Component) {\n  (0, _inherits2.default)(TodoList, _React$Component);\n\n  var _super = _createSuper(TodoList);\n\n  function TodoList(props) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, TodoList);\n    _this = _super.call(this, props);\n\n    _this._changeNewTitleText = function (text) {\n      _this.setState({\n        newTodoTitle: text\n      });\n    };\n\n    _this.state = {\n      newTodoTitle: ''\n    };\n    return _this;\n  }\n\n  (0, _createClass2.default)(TodoList, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return _react.default.createElement(_reactNative.View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 7\n        }\n      }, _react.default.createElement(_reactNative.View, {\n        style: styles.input,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 9\n        }\n      }, _react.default.createElement(_reactNative.TextInput, {\n        style: styles.inputText,\n        placeholder: 'New Todo title',\n        autoCorrect: false,\n        returnKeyType: 'done',\n        value: this.state.newTodoTitle,\n        onChangeText: this._changeNewTitleText,\n        onSubmitEditing: function onSubmitEditing() {\n          _this2.props.addTodo(_this2.state.newTodoTitle);\n\n          _this2._changeNewTitleText('');\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }\n      }), _react.default.createElement(_reactNative.TouchableOpacity, {\n        style: styles.addButton,\n        onPress: function onPress() {\n          _this2.props.addTodo(_this2.state.newTodoTitle);\n\n          _this2._changeNewTitleText('');\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }\n      }, _react.default.createElement(_reactNativeElements.Icon, {\n        name: \"add\",\n        color: \"#bbbbbb\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }\n      }))), _react.default.createElement(_reactNative.ScrollView, {\n        indicatorStyle: \"white\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 9\n        }\n      }, Object.keys(this.props.todos).length !== 0 || this.props.todos.constructor !== Object ? Object.values(this.props.todos).sort(function (a, b) {\n        if (a.priority === b.priority) {\n          return a.dueDate > b.dueDate;\n        }\n\n        return a.priority > b.priority;\n      }).map(function (todo) {\n        return _react.default.createElement(_todo.default, {\n          key: todo.id,\n          todo: todo,\n          deleteTodo: _this2.props.deleteTodo,\n          completeStateToggle: _this2.props.completeStateToggle,\n          changeTitleText: _this2.props.changeTitleText,\n          changeDescriptionText: _this2.props.changeDescriptionText,\n          changePriority: _this2.props.changePriority,\n          changeDueDate: _this2.props.changeDueDate,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 17\n          }\n        });\n      }) : _react.default.createElement(_reactNative.View, {\n        style: styles.emptyContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }\n      }, _react.default.createElement(_reactNative.Text, {\n        style: styles.emptyText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 15\n        }\n      }, \"Add New To-Do\"))));\n    }\n  }]);\n  return TodoList;\n}(_react.default.Component);\n\nexports.default = TodoList;\n\nvar styles = _reactNative.StyleSheet.create({\n  container: {\n    flex: 1,\n    width: width - 30\n  },\n  input: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    padding: 10,\n    marginBottom: 10,\n    backgroundColor: '#ffffff',\n    borderRadius: 3,\n    elevation: 5\n  },\n  inputText: {\n    flex: 10,\n    fontSize: 20\n  },\n  addButton: {\n    flex: 1,\n    alignItems: 'flex-end'\n  },\n  emptyContainer: {\n    flex: 1,\n    borderRadius: 3,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#5c3735',\n    padding: 5,\n    elevation: 5\n  },\n  emptyText: {\n    fontSize: 30,\n    color: '#ffffff'\n  }\n});","map":{"version":3,"sources":["D:/merge/please-attendence/src/components/todolist.js"],"names":["Dimensions","get","width","TodoList","props","_changeNewTitleText","text","setState","newTodoTitle","state","styles","container","input","inputText","addTodo","addButton","Object","keys","todos","length","constructor","values","sort","a","b","priority","dueDate","map","todo","id","deleteTodo","completeStateToggle","changeTitleText","changeDescriptionText","changePriority","changeDueDate","emptyContainer","emptyText","React","Component","StyleSheet","create","flex","flexDirection","alignItems","padding","marginBottom","backgroundColor","borderRadius","elevation","fontSize","justifyContent","color"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n  TextInput,\r\n  ScrollView,\r\n  TouchableOpacity,\r\n  Dimensions,\r\n} from 'react-native';\r\nimport Todo from '../component/todo';\r\nimport {Icon} from 'react-native-elements';\r\n\r\nconst {width} = Dimensions.get('window');\r\n\r\nexport default class TodoList extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      newTodoTitle: '',\r\n    };\r\n  }\r\n\r\n  _changeNewTitleText = text => {\r\n    this.setState({newTodoTitle: text});\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <View style={styles.container}>\r\n        <View style={styles.input}>\r\n          <TextInput\r\n            style={styles.inputText}\r\n            placeholder={'New Todo title'}\r\n            autoCorrect={false}\r\n            returnKeyType={'done'}\r\n            value={this.state.newTodoTitle}\r\n            onChangeText={this._changeNewTitleText}\r\n            onSubmitEditing={() => {\r\n              this.props.addTodo(this.state.newTodoTitle);\r\n              this._changeNewTitleText('');\r\n            }}\r\n          />\r\n          <TouchableOpacity\r\n            style={styles.addButton}\r\n            onPress={() => {\r\n              this.props.addTodo(this.state.newTodoTitle);\r\n              this._changeNewTitleText('');\r\n            }}>\r\n            <Icon name=\"add\" color=\"#bbbbbb\" />\r\n          </TouchableOpacity>\r\n        </View>\r\n        <ScrollView indicatorStyle=\"white\">\r\n          {Object.keys(this.props.todos).length !== 0 ||\r\n          this.props.todos.constructor !== Object ? (\r\n            Object.values(this.props.todos)\r\n              .sort((a, b) => {\r\n                if (a.priority === b.priority) {\r\n                  return a.dueDate > b.dueDate;\r\n                }\r\n                return a.priority > b.priority;\r\n              })\r\n              .map(todo => (\r\n                <Todo\r\n                  key={todo.id}\r\n                  todo={todo}\r\n                  deleteTodo={this.props.deleteTodo}\r\n                  completeStateToggle={this.props.completeStateToggle}\r\n                  changeTitleText={this.props.changeTitleText}\r\n                  changeDescriptionText={this.props.changeDescriptionText}\r\n                  changePriority={this.props.changePriority}\r\n                  changeDueDate={this.props.changeDueDate}\r\n                />\r\n              ))\r\n          ) : (\r\n            <View style={styles.emptyContainer}>\r\n              <Text style={styles.emptyText}>Add New To-Do</Text>\r\n            </View>\r\n          )}\r\n        </ScrollView>\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    width: width - 30,\r\n  },\r\n  input: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    padding: 10,\r\n    marginBottom: 10,\r\n    backgroundColor: '#ffffff',\r\n    borderRadius: 3,\r\n    elevation: 5,\r\n  },\r\n  inputText: {flex: 10, fontSize: 20},\r\n  addButton: {flex: 1, alignItems: 'flex-end'},\r\n  emptyContainer: {\r\n    flex: 1,\r\n    borderRadius: 3,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    backgroundColor: '#5c3735',\r\n    padding: 5,\r\n    elevation: 5,\r\n  },\r\n  emptyText: {\r\n    fontSize: 30,\r\n    color: '#ffffff',\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"script"}