{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _subject = _interopRequireWildcard(require(\"../../components/context/subject\"));\n\nvar _subject2 = _interopRequireDefault(require(\"../../components/subject\"));\n\nvar _reactNativeGestureHandler = require(\"react-native-gesture-handler\");\n\nvar _theme = require(\"../../components/theme\");\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\merge\\\\please-attendence\\\\src\\\\navigation\\\\pages\\\\FirstSetting.js\";\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nvar SubjectInput = function SubjectInput() {\n  var _useState = (0, _react.useState)(0),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      count = _useState2[0],\n      setcount = _useState2[1];\n\n  var _useContext = (0, _react.useContext)(_subject.default),\n      dispatch = _useContext.dispatch;\n\n  return _react.default.createElement(_reactNativeGestureHandler.TextInput, {\n    value: count,\n    onChangeText: function onChangeText(text) {\n      return setcount(text);\n    },\n    onSubmitEditing: function onSubmitEditing() {\n      dispatch(count);\n      setcount();\n    },\n    placeholder: \"How many lectures do you take?\",\n    autoCapitalize: \"none\",\n    autoCorrect: false,\n    returnKeyType: \"done\",\n    keyboardType: \"number-pad\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  });\n};\n\nvar FirstSetting = function FirstSetting(_ref) {\n  var navigation = _ref.navigation;\n  return _react.default.createElement(_subject.SubjectProvider, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, _react.default.createElement(_reactNative.View, {\n    style: FSstyles.view,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, _react.default.createElement(_subject2.default, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 21\n    }\n  }), _react.default.createElement(SubjectInput, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 21\n    }\n  }), _react.default.createElement(_reactNative.Button, {\n    title: \"next\",\n    onPress: function onPress() {\n      return navigation.navigate('InputSubject');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 21\n    }\n  })));\n};\n\nvar FSstyles = _reactNative.StyleSheet.create({\n  button: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingVertical: 12,\n    paddingHorizontal: 24,\n    borderRadius: 0,\n    elevation: 3,\n    backgroundColor: _theme.theme.color1\n  },\n  text: {\n    fontsize: 40,\n    lineHeight: 14,\n    fontWeight: 'bold',\n    letterSpacing: 0.25,\n    color: '#035A15'\n  },\n  view: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  }\n});\n\nvar _default = FirstSetting;\nexports.default = _default;","map":{"version":3,"sources":["D:/merge/please-attendence/src/navigation/pages/FirstSetting.js"],"names":["SubjectInput","count","setcount","SubjectContext","dispatch","text","FirstSetting","navigation","FSstyles","view","navigate","StyleSheet","create","button","alignItems","justifyContent","paddingVertical","paddingHorizontal","borderRadius","elevation","backgroundColor","theme","color1","fontsize","lineHeight","fontWeight","letterSpacing","color","flex"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AAEA;;AAIA;;AAEA;;;;;;;;;AAEA,IAAMA,YAAY,GAAG,SAAfA,YAAe,GAAM;AACvB,kBAA0B,qBAAS,CAAT,CAA1B;AAAA;AAAA,MAAOC,KAAP;AAAA,MAAcC,QAAd;;AACA,oBAAmB,uBAAWC,gBAAX,CAAnB;AAAA,MAAOC,QAAP,eAAOA,QAAP;;AAEA,SACI,6BAAC,oCAAD;AACI,IAAA,KAAK,EAAIH,KADb;AAEI,IAAA,YAAY,EAAI,sBAAAI,IAAI;AAAA,aAAIH,QAAQ,CAACG,IAAD,CAAZ;AAAA,KAFxB;AAGI,IAAA,eAAe,EAAI,2BAAM;AACrBD,MAAAA,QAAQ,CAACH,KAAD,CAAR;AACAC,MAAAA,QAAQ;AACX,KANL;AAOI,IAAA,WAAW,EAAG,gCAPlB;AAQI,IAAA,cAAc,EAAG,MARrB;AASI,IAAA,WAAW,EAAI,KATnB;AAUI,IAAA,aAAa,EAAG,MAVpB;AAWI,IAAA,YAAY,EAAG,YAXnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAeH,CAnBD;;AAqBA,IAAMI,YAAY,GAAG,SAAfA,YAAe,OAAkB;AAAA,MAAhBC,UAAgB,QAAhBA,UAAgB;AACnC,SACI,6BAAC,wBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,6BAAC,iBAAD;AAAM,IAAA,KAAK,EAAEC,QAAQ,CAACC,IAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQ,6BAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFR,EAGQ,6BAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHR,EAIQ,6BAAC,mBAAD;AACR,IAAA,KAAK,EAAG,MADA;AAER,IAAA,OAAO,EAAI;AAAA,aAAMF,UAAU,CAACG,QAAX,CAAoB,cAApB,CAAN;AAAA,KAFH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJR,CADJ,CADJ;AAaH,CAdD;;AAiBA,IAAMF,QAAQ,GAAGG,wBAAWC,MAAX,CAAkB;AAC/BC,EAAAA,MAAM,EAAE;AACJC,IAAAA,UAAU,EAAE,QADR;AAEJC,IAAAA,cAAc,EAAE,QAFZ;AAGJC,IAAAA,eAAe,EAAE,EAHb;AAIJC,IAAAA,iBAAiB,EAAE,EAJf;AAKJC,IAAAA,YAAY,EAAE,CALV;AAMJC,IAAAA,SAAS,EAAE,CANP;AAOJC,IAAAA,eAAe,EAAEC,aAAMC;AAPnB,GADuB;AAU/BjB,EAAAA,IAAI,EAAE;AACFkB,IAAAA,QAAQ,EAAE,EADR;AAEFC,IAAAA,UAAU,EAAE,EAFV;AAGFC,IAAAA,UAAU,EAAE,MAHV;AAIFC,IAAAA,aAAa,EAAE,IAJb;AAKFC,IAAAA,KAAK,EAAE;AALL,GAVyB;AAiB/BlB,EAAAA,IAAI,EAAE;AACFmB,IAAAA,IAAI,EAAE,CADJ;AAEFb,IAAAA,cAAc,EAAE,QAFd;AAGFD,IAAAA,UAAU,EAAE;AAHV;AAjByB,CAAlB,CAAjB;;eAyBeR,Y","sourcesContent":["import React from \"react\";\r\nimport { StyleSheet } from \"react-native\";\r\nimport SubjectContext from \"../../components/context/subject\";\r\nimport { SubjectProvider } from \"../../components/context/subject\";\r\nimport Subject from \"../../components/subject\";\r\nimport { View } from \"react-native\";\r\nimport { Button } from \"react-native\";\r\nimport { useContext } from 'react';\r\nimport { TextInput } from 'react-native-gesture-handler';\r\nimport { useState } from 'react';\r\nimport { theme } from \"../../components/theme\";\r\n\r\nconst SubjectInput = () => {\r\n    const [count, setcount] = useState(0);\r\n    const {dispatch} = useContext(SubjectContext);\r\n\r\n    return(\r\n        <TextInput \r\n            value = {count}\r\n            onChangeText = {text => setcount(text)}\r\n            onSubmitEditing = {() => {\r\n                dispatch(count);\r\n                setcount();\r\n            }}\r\n            placeholder = \"How many lectures do you take?\"\r\n            autoCapitalize = \"none\"\r\n            autoCorrect = {false}\r\n            returnKeyType = \"done\"\r\n            keyboardType = \"number-pad\"\r\n        />\r\n    )\r\n}\r\n\r\nconst FirstSetting = ({navigation}) => {\r\n    return (\r\n        <SubjectProvider>\r\n            <View style={FSstyles.view}>\r\n                \r\n                    <Subject />\r\n                    <SubjectInput />\r\n                    <Button \r\n            title = \"next\"\r\n            onPress = {() => navigation.navigate('InputSubject')} />\r\n            </View>\r\n            </SubjectProvider>   \r\n\r\n    )\r\n}\r\n\r\n\r\nconst FSstyles = StyleSheet.create({\r\n    button: {\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        paddingVertical: 12,\r\n        paddingHorizontal: 24,\r\n        borderRadius: 0,\r\n        elevation: 3,\r\n        backgroundColor: theme.color1,\r\n    },\r\n    text: {\r\n        fontsize: 40,\r\n        lineHeight: 14,\r\n        fontWeight: 'bold',\r\n        letterSpacing: 0.25,\r\n        color: '#035A15',\r\n    },\r\n    view: {\r\n        flex: 1,\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        // backgroundColor:'#101010',\r\n    }\r\n});\r\n\r\nexport default FirstSetting;\r\n\r\n/*\r\n\r\n        <Pressable style = {FSstyles.button} onPress={() => {setCount(count+1);}}>\r\n            <Text style={FSstyles.text}>+</Text>\r\n        </Pressable>\r\n        <Pressable style = {FSstyles.button} onPress={() => {setCount(count-1);}}>\r\n            <Text style={FSstyles.text}>-</Text>\r\n        </Pressable>\r\n        <Pressable style = {FSstyles.button} onPress={() => {}}>\r\n            <Text style={FSstyles.text}>Summit</Text>\r\n        </Pressable>\r\n\r\n*/"]},"metadata":{},"sourceType":"script"}