{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _style = _interopRequireDefault(require(\"./style\"));\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\merge\\\\please-attendence\\\\node_modules\\\\react-native-calendars\\\\src\\\\calendar\\\\day\\\\dot\\\\index.js\";\n\nvar Dot = function Dot(_ref) {\n  var theme = _ref.theme,\n      marked = _ref.marked,\n      disabled = _ref.disabled,\n      inactive = _ref.inactive,\n      color = _ref.color,\n      today = _ref.today,\n      selected = _ref.selected;\n  var style = (0, _style.default)(theme);\n  var dotStyle = [style.dot];\n\n  if (marked) {\n    dotStyle.push(style.visibleDot);\n\n    if (today) {\n      dotStyle.push(style.todayDot);\n    }\n\n    if (disabled) {\n      dotStyle.push(style.disabledDot);\n    }\n\n    if (inactive) {\n      dotStyle.push(style.inactiveDot);\n    }\n\n    if (selected) {\n      dotStyle.push(style.selectedDot);\n    }\n\n    if (color) {\n      dotStyle.push({\n        backgroundColor: color\n      });\n    }\n  }\n\n  return _react.default.createElement(_reactNative.View, {\n    style: dotStyle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 12\n    }\n  });\n};\n\nvar _default = Dot;\nexports.default = _default;\nDot.propTypes = {\n  theme: _propTypes.default.object,\n  color: _propTypes.default.string,\n  marked: _propTypes.default.bool,\n  selected: _propTypes.default.bool,\n  disabled: _propTypes.default.bool,\n  inactive: _propTypes.default.bool,\n  today: _propTypes.default.bool\n};","map":{"version":3,"sources":["D:/merge/please-attendence/node_modules/react-native-calendars/src/calendar/day/dot/index.js"],"names":["Dot","theme","marked","disabled","inactive","color","today","selected","style","dotStyle","dot","push","visibleDot","todayDot","disabledDot","inactiveDot","selectedDot","backgroundColor","propTypes","PropTypes","object","string","bool"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;;;;AACA,IAAMA,GAAG,GAAG,SAANA,GAAM,OAAmE;AAAA,MAAhEC,KAAgE,QAAhEA,KAAgE;AAAA,MAAzDC,MAAyD,QAAzDA,MAAyD;AAAA,MAAjDC,QAAiD,QAAjDA,QAAiD;AAAA,MAAvCC,QAAuC,QAAvCA,QAAuC;AAAA,MAA7BC,KAA6B,QAA7BA,KAA6B;AAAA,MAAtBC,KAAsB,QAAtBA,KAAsB;AAAA,MAAfC,QAAe,QAAfA,QAAe;AAC3E,MAAMC,KAAK,GAAG,oBAAiBP,KAAjB,CAAd;AACA,MAAMQ,QAAQ,GAAG,CAACD,KAAK,CAACE,GAAP,CAAjB;;AACA,MAAIR,MAAJ,EAAY;AACRO,IAAAA,QAAQ,CAACE,IAAT,CAAcH,KAAK,CAACI,UAApB;;AACA,QAAIN,KAAJ,EAAW;AACPG,MAAAA,QAAQ,CAACE,IAAT,CAAcH,KAAK,CAACK,QAApB;AACH;;AACD,QAAIV,QAAJ,EAAc;AACVM,MAAAA,QAAQ,CAACE,IAAT,CAAcH,KAAK,CAACM,WAApB;AACH;;AACD,QAAIV,QAAJ,EAAc;AACVK,MAAAA,QAAQ,CAACE,IAAT,CAAcH,KAAK,CAACO,WAApB;AACH;;AACD,QAAIR,QAAJ,EAAc;AACVE,MAAAA,QAAQ,CAACE,IAAT,CAAcH,KAAK,CAACQ,WAApB;AACH;;AACD,QAAIX,KAAJ,EAAW;AACPI,MAAAA,QAAQ,CAACE,IAAT,CAAc;AAAEM,QAAAA,eAAe,EAAEZ;AAAnB,OAAd;AACH;AACJ;;AACD,SAAO,6BAAC,iBAAD;AAAM,IAAA,KAAK,EAAEI,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACH,CAtBD;;eAuBeT,G;;AACfA,GAAG,CAACkB,SAAJ,GAAgB;AACZjB,EAAAA,KAAK,EAAEkB,mBAAUC,MADL;AAEZf,EAAAA,KAAK,EAAEc,mBAAUE,MAFL;AAGZnB,EAAAA,MAAM,EAAEiB,mBAAUG,IAHN;AAIZf,EAAAA,QAAQ,EAAEY,mBAAUG,IAJR;AAKZnB,EAAAA,QAAQ,EAAEgB,mBAAUG,IALR;AAMZlB,EAAAA,QAAQ,EAAEe,mBAAUG,IANR;AAOZhB,EAAAA,KAAK,EAAEa,mBAAUG;AAPL,CAAhB","sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react';\nimport { View } from 'react-native';\nimport styleConstructor from './style';\nconst Dot = ({ theme, marked, disabled, inactive, color, today, selected }) => {\n    const style = styleConstructor(theme);\n    const dotStyle = [style.dot];\n    if (marked) {\n        dotStyle.push(style.visibleDot);\n        if (today) {\n            dotStyle.push(style.todayDot);\n        }\n        if (disabled) {\n            dotStyle.push(style.disabledDot);\n        }\n        if (inactive) {\n            dotStyle.push(style.inactiveDot);\n        }\n        if (selected) {\n            dotStyle.push(style.selectedDot);\n        }\n        if (color) {\n            dotStyle.push({ backgroundColor: color });\n        }\n    }\n    return <View style={dotStyle}/>;\n};\nexport default Dot;\nDot.propTypes = {\n    theme: PropTypes.object,\n    color: PropTypes.string,\n    marked: PropTypes.bool,\n    selected: PropTypes.bool,\n    disabled: PropTypes.bool,\n    inactive: PropTypes.bool,\n    today: PropTypes.bool\n};\n"]},"metadata":{},"sourceType":"script"}