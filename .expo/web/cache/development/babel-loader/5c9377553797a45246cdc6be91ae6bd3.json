{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _EmptySearchResult = _interopRequireDefault(require(\"../../components/SearchScreen/EmptySearchResult\"));\n\nvar _SearchContext = _interopRequireDefault(require(\"../../components/context/SearchContext\"));\n\nvar _LogContext = _interopRequireDefault(require(\"../../components/context/LogContext\"));\n\nvar _SearchList = _interopRequireDefault(require(\"../../components/SearchScreen/SearchList\"));\n\nvar _jsxFileName = \"D:\\\\merge\\\\please-attendence\\\\src\\\\navigation\\\\pages\\\\SearchScreen.js\";\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction SearchScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useContext = (0, _react.useContext)(_SearchContext.default),\n      keyword = _useContext.keyword;\n\n  var _useContext2 = (0, _react.useContext)(_LogContext.default),\n      logs = _useContext2.logs;\n\n  var filtered = keyword === '' ? [] : logs.filter(function (log) {\n    return [log.title, log.body].some(function (text) {\n      return text.includes(keyword);\n    });\n  });\n\n  if (keyword === '') {\n    return _react.default.createElement(_EmptySearchResult.default, {\n      type: \"EMPTY_KEYWORD\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 12\n      }\n    });\n  }\n\n  if (filtered.length === 0) {\n    return _react.default.createElement(_EmptySearchResult.default, {\n      type: \"NOT_FOUND\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 12\n      }\n    });\n  }\n\n  return _react.default.createElement(_reactNative.View, {\n    style: styles.block,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, _react.default.createElement(FeedList, {\n    logs: filtered,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }));\n}\n\nvar styles = _reactNative.StyleSheet.create({\n  block: {\n    flex: 1\n  }\n});\n\nvar _default = SearchScreen;\nexports.default = _default;","map":{"version":3,"sources":["D:/merge/please-attendence/src/navigation/pages/SearchScreen.js"],"names":["SearchScreen","navigation","SearchContext","keyword","LogContext","logs","filtered","filter","log","title","body","some","text","includes","length","styles","block","StyleSheet","create","flex"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;;;AAGA,SAASA,YAAT,OAAoC;AAAA,MAAbC,UAAa,QAAbA,UAAa;;AAClC,oBAAkB,uBAAWC,sBAAX,CAAlB;AAAA,MAAOC,OAAP,eAAOA,OAAP;;AACA,qBAAe,uBAAWC,mBAAX,CAAf;AAAA,MAAOC,IAAP,gBAAOA,IAAP;;AAEA,MAAMC,QAAQ,GACZH,OAAO,KAAK,EAAZ,GACI,EADJ,GAEIE,IAAI,CAACE,MAAL,CAAY,UAACC,GAAD;AAAA,WACZ,CAACA,GAAG,CAACC,KAAL,EAAYD,GAAG,CAACE,IAAhB,EAAsBC,IAAtB,CAA2B,UAACC,IAAD;AAAA,aAAUA,IAAI,CAACC,QAAL,CAAcV,OAAd,CAAV;AAAA,KAA3B,CADY;AAAA,GAAZ,CAHN;;AAOA,MAAIA,OAAO,KAAK,EAAhB,EAAmB;AACjB,WAAO,6BAAC,0BAAD;AAAmB,MAAA,IAAI,EAAC,eAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AAED,MAAIG,QAAQ,CAACQ,MAAT,KAAoB,CAAxB,EAA2B;AACzB,WAAO,6BAAC,0BAAD;AAAmB,MAAA,IAAI,EAAC,WAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AAED,SACE,6BAAC,iBAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,6BAAC,QAAD;AAAU,IAAA,IAAI,EAAEV,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADF;AAKD;;AAED,IAAMS,MAAM,GAAGE,wBAAWC,MAAX,CAAkB;AAC/BF,EAAAA,KAAK,EAAE;AACLG,IAAAA,IAAI,EAAE;AADD;AADwB,CAAlB,CAAf;;eAMenB,Y","sourcesContent":["import React, {useContext} from 'react';\nimport {StyleSheet, View} from 'react-native';\nimport EmptySearchResult from '../../components/SearchScreen/EmptySearchResult';\nimport SearchContext from '../../components/context/SearchContext';\nimport LogContext from '../../components/context/LogContext';\nimport SearchList from '../../components/SearchScreen/SearchList'\n\n\nfunction SearchScreen({navigation}) {\n  const {keyword} = useContext(SearchContext);\n  const {logs} = useContext(LogContext);\n\n  const filtered = \n    keyword === ''\n      ? []\n      : logs.filter((log) =>\n        [log.title, log.body].some((text) => text.includes(keyword)),\n      );\n\n  if (keyword === ''){\n    return <EmptySearchResult type=\"EMPTY_KEYWORD\" />;\n  }\n\n  if (filtered.length === 0) {\n    return <EmptySearchResult type=\"NOT_FOUND\" />;\n  }\n\n  return (\n    <View style={styles.block}>\n        <FeedList logs={filtered} />\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  block: {\n    flex: 1,\n  },\n});\n\nexport default SearchScreen;\n"]},"metadata":{},"sourceType":"script"}