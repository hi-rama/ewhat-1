{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _MaterialIcons = _interopRequireDefault(require(\"react-native-vector-icons/MaterialIcons\"));\n\nvar _SearchContext = _interopRequireDefault(require(\"../../contexts/SearchContext\"));\n\nvar _jsxFileName = \"D:\\\\merge\\\\please-attendence\\\\src\\\\components\\\\SearchScreen\\\\SearchHeader.js\";\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction SearchHeader() {\n  var _useWindowDimensions = (0, _reactNative.useWindowDimensions)(),\n      width = _useWindowDimensions.width;\n\n  var _useContext = (0, _react.useContext)(_SearchContext.default),\n      keyword = _useContext.keyword,\n      onChangeText = _useContext.onChangeText;\n\n  return _react.default.createElement(_reactNative.View, {\n    style: [styles.block, {\n      width: width - 32,\n      height: 24\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }\n  }, _react.default.createElement(_reactNative.TextInput, {\n    style: styles.input,\n    placeholder: \"\\uAC80\\uC0C9\\uC5B4\\uB97C \\uC785\\uB825\\uD558\\uC138\\uC694\",\n    value: keyword,\n    onChangeText: onChangeText,\n    autoFocus: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }), _react.default.createElement(_reactNative.Pressable, {\n    style: function style(_ref) {\n      var pressed = _ref.pressed;\n      return [styles.button, pressed && {\n        opacity: 0.5\n      }];\n    },\n    onPress: function onPress() {\n      return onChangeText('');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, _react.default.createElement(_MaterialIcons.default, {\n    name: \"cancel\",\n    size: 20,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  })));\n}\n\nvar styles = _reactNative.StyleSheet.create({\n  block: {\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  input: {\n    flex: 1\n  },\n  button: {\n    marginLeft: 8\n  }\n});\n\nvar _default = SearchHeader;\nexports.default = _default;","map":{"version":3,"sources":["D:/merge/please-attendence/src/components/SearchScreen/SearchHeader.js"],"names":["SearchHeader","width","SearchContext","keyword","onChangeText","styles","block","height","input","pressed","button","opacity","StyleSheet","create","flexDirection","alignItems","flex","marginLeft"],"mappings":";;;;;;;AAAA;;AACA;;AAKA;;AACA;;;;;;;;AAEA,SAASA,YAAT,GAAwB;AACpB,6BAAgB,uCAAhB;AAAA,MAAOC,KAAP,wBAAOA,KAAP;;AACA,oBAA+B,uBAAWC,sBAAX,CAA/B;AAAA,MAAOC,OAAP,eAAOA,OAAP;AAAA,MAAgBC,YAAhB,eAAgBA,YAAhB;;AAEA,SACA,6BAAC,iBAAD;AAAM,IAAA,KAAK,EAAE,CAACC,MAAM,CAACC,KAAR,EAAe;AAACL,MAAAA,KAAK,EAAEA,KAAK,GAAC,EAAd;AAAkBM,MAAAA,MAAM,EAAC;AAAzB,KAAf,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,6BAAC,sBAAD;AACI,IAAA,KAAK,EAAEF,MAAM,CAACG,KADlB;AAEI,IAAA,WAAW,EAAC,yDAFhB;AAGI,IAAA,KAAK,EAAEL,OAHX;AAII,IAAA,YAAY,EAAEC,YAJlB;AAKI,IAAA,SAAS,MALb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAQI,6BAAC,sBAAD;AACI,IAAA,KAAK,EAAE;AAAA,UAAEK,OAAF,QAAEA,OAAF;AAAA,aAAe,CAACJ,MAAM,CAACK,MAAR,EAAgBD,OAAO,IAAI;AAACE,QAAAA,OAAO,EAAE;AAAV,OAA3B,CAAf;AAAA,KADX;AAEI,IAAA,OAAO,EAAE;AAAA,aAAKP,YAAY,CAAC,EAAD,CAAjB;AAAA,KAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGI,6BAAC,sBAAD;AAAM,IAAA,IAAI,EAAC,QAAX;AAAoB,IAAA,IAAI,EAAE,EAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CARJ,CADA;AAgBH;;AAED,IAAMC,MAAM,GAAGO,wBAAWC,MAAX,CAAkB;AAC7BP,EAAAA,KAAK,EAAE;AACHQ,IAAAA,aAAa,EAAE,KADZ;AAEHC,IAAAA,UAAU,EAAE;AAFT,GADsB;AAK7BP,EAAAA,KAAK,EAAE;AACHQ,IAAAA,IAAI,EAAE;AADH,GALsB;AAQ7BN,EAAAA,MAAM,EAAE;AACJO,IAAAA,UAAU,EAAE;AADR;AARqB,CAAlB,CAAf;;eAYejB,Y","sourcesContent":["import React, { useContext } from 'react';\r\nimport { Pressable,\r\n        StyleSheet, \r\n        View, \r\n        useWindowDimensions,\r\n        TextInput } from  'react-native';\r\nimport Icon from 'react-native-vector-icons/MaterialIcons';\r\nimport SearchContext from '../../contexts/SearchContext';\r\n\r\nfunction SearchHeader() {\r\n    const {width} = useWindowDimensions();\r\n    const {keyword, onChangeText}= useContext(SearchContext);\r\n\r\n    return ( \r\n    <View style={[styles.block, {width: width-32, height:24}]}>\r\n        <TextInput \r\n            style={styles.input} \r\n            placeholder=\"검색어를 입력하세요\" \r\n            value={keyword}\r\n            onChangeText={onChangeText}    \r\n            autoFocus \r\n        />\r\n        <Pressable\r\n            style={({pressed}) => [styles.button, pressed && {opacity: 0.5}]}\r\n            onPress={()=> onChangeText('')}>\r\n            <Icon name=\"cancel\" size={20} />\r\n        </Pressable>\r\n    </View>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    block: {\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n    },\r\n    input: {\r\n        flex: 1,\r\n    },\r\n    button: {\r\n        marginLeft: 8,\r\n    },\r\n});\r\nexport default SearchHeader;\r\n"]},"metadata":{},"sourceType":"script"}