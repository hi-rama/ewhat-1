{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _TodoDetailView = _interopRequireDefault(require(\"./layout/TodoDetailView\"));\n\nvar _reactNativeElements = require(\"react-native-elements\");\n\nvar _jsxFileName = \"D:\\\\merge\\\\please-attendence\\\\src\\\\components\\\\todo.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar Todo = function (_React$Component) {\n  (0, _inherits2.default)(Todo, _React$Component);\n\n  var _super = _createSuper(Todo);\n\n  function Todo(props) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, Todo);\n    _this = _super.call(this, props);\n\n    _this.shouldComponentUpdate = function (nextProps, nextState) {\n      var isChanged = _this.props.todo !== nextProps.todo || _this.state !== nextState ? true : false;\n      return isChanged;\n    };\n\n    _this._toggleEditMode = function () {\n      _this.setState(function (prevState) {\n        return {\n          isEditMode: !prevState.isEditMode\n        };\n      });\n    };\n\n    _this._toggleDetailViewVisible = function () {\n      _this.setState(function (prevState) {\n        return {\n          isDetailViewOpen: !prevState.isDetailViewOpen\n        };\n      });\n    };\n\n    _this._openDetailEdit = function () {\n      _this.setState(function (_prevState) {\n        return {\n          isDetailViewOpen: true\n        };\n      });\n    };\n\n    _this.state = {\n      isDetailViewOpen: false,\n      isEditMode: false\n    };\n    return _this;\n  }\n\n  (0, _createClass2.default)(Todo, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return _react.default.createElement(_reactNative.View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 7\n        }\n      }, _react.default.createElement(_reactNative.View, {\n        style: styles.titleContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 9\n        }\n      }, _react.default.createElement(_reactNativeElements.CheckBox, {\n        style: styles.checkbox,\n        checked: this.props.todo.isCompleted,\n        onPress: function onPress() {\n          return _this2.props.completeStateToggle(_this2.props.todo.id, _this2.props.todo.isCompleted);\n        },\n        checkedColor: '#9bc53b',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }\n      }), _react.default.createElement(_reactNative.TouchableOpacity, {\n        style: styles.titleBar,\n        onPress: this._toggleDetailViewVisible,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }\n      }, _react.default.createElement(_reactNative.Text, {\n        style: this.props.todo.isCompleted ? styles.CompletedTitleText : styles.UncompletedTitleText,\n        numberOfLines: 1,\n        ellipsizeMode: \"tail\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }\n      }, this.props.todo.title)), this.state.isEditMode ? _react.default.createElement(_reactNative.View, {\n        style: styles.buttonContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }\n      }, _react.default.createElement(_reactNative.TouchableOpacity, {\n        style: styles.button,\n        onPress: this._toggleEditMode,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 15\n        }\n      }, _react.default.createElement(_reactNativeElements.Icon, {\n        name: \"check\",\n        color: \"#bbbbbb\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 17\n        }\n      }))) : _react.default.createElement(_reactNative.View, {\n        style: styles.buttonContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }\n      }, _react.default.createElement(_reactNative.TouchableOpacity, {\n        onPress: function onPress() {\n          _this2._toggleEditMode();\n\n          _this2._openDetailEdit();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 15\n        }\n      }, _react.default.createElement(_reactNativeElements.Icon, {\n        name: \"create\",\n        color: \"#bbbbbb\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 17\n        }\n      })), _react.default.createElement(_reactNative.TouchableOpacity, {\n        style: styles.button,\n        onPress: function onPress() {\n          return _this2.props.deleteTodo(_this2.props.todo.id);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 15\n        }\n      }, _react.default.createElement(_reactNativeElements.Icon, {\n        name: \"delete\",\n        color: \"#bbbbbb\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 17\n        }\n      })))), this.state.isDetailViewOpen ? _react.default.createElement(_reactNative.View, {\n        style: styles.detailView,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }\n      }, _react.default.createElement(_TodoDetailView.default, {\n        isEditable: this.state.isEditMode,\n        todo: this.props.todo,\n        toggleDetailViewVisible: this._toggleDetailViewVisible,\n        changeTitleText: this.props.changeTitleText,\n        changeDescriptionText: this.props.changeDescriptionText,\n        changePriority: this.props.changePriority,\n        changeDueDate: this.props.changeDueDate,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }\n      })) : _react.default.createElement(_reactNative.View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }\n      }));\n    }\n  }]);\n  return Todo;\n}(_react.default.Component);\n\nexports.default = Todo;\n\nvar styles = _reactNative.StyleSheet.create({\n  container: {\n    flex: 1,\n    marginBottom: 10\n  },\n  titleContainer: {\n    flex: 1,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#5c3735',\n    borderRadius: 5,\n    elevation: 5\n  },\n  titleBar: {\n    flex: 3\n  },\n  UncompletedTitleText: {\n    fontSize: 20,\n    color: '#ffffff'\n  },\n  CompletedTitleText: {\n    fontSize: 20,\n    textDecorationLine: 'line-through',\n    color: '#bbbbbb'\n  },\n  buttonContainer: {\n    flex: 1,\n    flexDirection: 'row'\n  },\n  button: {\n    marginLeft: 10\n  },\n  checkbox: {\n    flex: 1\n  },\n  detailView: {\n    paddingHorizontal: 5\n  }\n});","map":{"version":3,"sources":["D:/merge/please-attendence/src/components/todo.js"],"names":["Todo","props","shouldComponentUpdate","nextProps","nextState","isChanged","todo","state","_toggleEditMode","setState","prevState","isEditMode","_toggleDetailViewVisible","isDetailViewOpen","_openDetailEdit","_prevState","styles","container","titleContainer","checkbox","isCompleted","completeStateToggle","id","titleBar","CompletedTitleText","UncompletedTitleText","title","buttonContainer","button","deleteTodo","detailView","changeTitleText","changeDescriptionText","changePriority","changeDueDate","React","Component","StyleSheet","create","flex","marginBottom","flexDirection","alignItems","justifyContent","backgroundColor","borderRadius","elevation","fontSize","color","textDecorationLine","marginLeft","paddingHorizontal"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {StyleSheet, View, TouchableOpacity, Text} from 'react-native';\r\nimport TodoDetailView from './layout/TodoDetailView'\r\nimport {CheckBox, Icon} from 'react-native-elements';\r\n\r\nexport default class Todo extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isDetailViewOpen: false,\r\n      isEditMode: false,\r\n    };\r\n  }\r\n\r\n  // update todo compoent when props or state changed\r\n  shouldComponentUpdate = (nextProps, nextState) => {\r\n    const isChanged =\r\n      this.props.todo !== nextProps.todo || this.state !== nextState\r\n        ? true\r\n        : false;\r\n    return isChanged;\r\n  };\r\n\r\n  // toggle edit mode, you can edit todo's info when edit mode\r\n  _toggleEditMode = () => {\r\n    this.setState(prevState => {\r\n      return {\r\n        isEditMode: !prevState.isEditMode,\r\n      };\r\n    });\r\n  };\r\n\r\n  _toggleDetailViewVisible = () => {\r\n    this.setState(prevState => {\r\n      return {\r\n        isDetailViewOpen: !prevState.isDetailViewOpen,\r\n      };\r\n    });\r\n  };\r\n\r\n  //if detail vien was closed when edit mode, open detail view.\r\n  _openDetailEdit = () => {\r\n    this.setState(_prevState => {\r\n      return {\r\n        isDetailViewOpen: true,\r\n      };\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <View style={styles.container}>\r\n        <View style={styles.titleContainer}>\r\n          <CheckBox\r\n            style={styles.checkbox}\r\n            checked={this.props.todo.isCompleted}\r\n            onPress={() =>\r\n              this.props.completeStateToggle(\r\n                this.props.todo.id,\r\n                this.props.todo.isCompleted,\r\n              )\r\n            }\r\n            checkedColor={'#9bc53b'}\r\n          />\r\n          <TouchableOpacity\r\n            style={styles.titleBar}\r\n            onPress={this._toggleDetailViewVisible}>\r\n            <Text\r\n              style={\r\n                this.props.todo.isCompleted\r\n                  ? styles.CompletedTitleText\r\n                  : styles.UncompletedTitleText\r\n              }\r\n              numberOfLines={1}\r\n              ellipsizeMode=\"tail\">\r\n              {this.props.todo.title}\r\n            </Text>\r\n          </TouchableOpacity>\r\n\r\n          {this.state.isEditMode ? (\r\n            <View style={styles.buttonContainer}>\r\n              <TouchableOpacity\r\n                style={styles.button}\r\n                onPress={this._toggleEditMode}>\r\n                <Icon name=\"check\" color=\"#bbbbbb\" />\r\n              </TouchableOpacity>\r\n            </View>\r\n          ) : (\r\n            <View style={styles.buttonContainer}>\r\n              <TouchableOpacity\r\n                onPress={() => {\r\n                  this._toggleEditMode();\r\n                  this._openDetailEdit();\r\n                }}>\r\n                <Icon name=\"create\" color=\"#bbbbbb\" />\r\n              </TouchableOpacity>\r\n              <TouchableOpacity\r\n                style={styles.button}\r\n                onPress={() => this.props.deleteTodo(this.props.todo.id)}>\r\n                <Icon name=\"delete\" color=\"#bbbbbb\" />\r\n              </TouchableOpacity>\r\n            </View>\r\n          )}\r\n        </View>\r\n        {this.state.isDetailViewOpen ? (\r\n          <View style={styles.detailView}>\r\n            <TodoDetailView\r\n              isEditable={this.state.isEditMode}\r\n              todo={this.props.todo}\r\n              toggleDetailViewVisible={this._toggleDetailViewVisible}\r\n              changeTitleText={this.props.changeTitleText}\r\n              changeDescriptionText={this.props.changeDescriptionText}\r\n              changePriority={this.props.changePriority}\r\n              changeDueDate={this.props.changeDueDate}\r\n            />\r\n          </View>\r\n        ) : (\r\n          <View />\r\n        )}\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    marginBottom: 10,\r\n  },\r\n  titleContainer: {\r\n    flex: 1,\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    backgroundColor: '#5c3735',\r\n    borderRadius: 5,\r\n    elevation: 5,\r\n  },\r\n  titleBar: {\r\n    flex: 3,\r\n  },\r\n  UncompletedTitleText: {\r\n    fontSize: 20,\r\n    color: '#ffffff',\r\n  },\r\n  CompletedTitleText: {\r\n    fontSize: 20,\r\n    textDecorationLine: 'line-through',\r\n    color: '#bbbbbb',\r\n  },\r\n  buttonContainer: {\r\n    flex: 1,\r\n    flexDirection: 'row',\r\n  },\r\n  button: {\r\n    marginLeft: 10,\r\n  },\r\n  checkbox: {\r\n    flex: 1,\r\n  },\r\n  detailView: {\r\n    paddingHorizontal: 5,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"script"}