{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _reactNativeGestureHandler = require(\"react-native-gesture-handler\");\n\nvar _theme = require(\"../../components/theme\");\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\merge\\\\please-attendence\\\\src\\\\navigation\\\\pages\\\\FirstSetting.js\";\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nvar SubjectContext = (0, _react.createContext)({\n  number: 6\n});\n\nvar FirstSetting = function FirstSetting(_ref) {\n  var navigation = _ref.navigation;\n  return _react.default.createElement(_reactNative.View, {\n    style: FSstyles.view,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }\n  }, \"return(\", _react.default.createElement(SubjectContext.Provider, {\n    value: {\n      number: SubjectContext.number\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, _react.default.createElement(SubjectContext.Consumer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }\n  }, function (value) {\n    return _react.default.createElement(Text, {\n      style: FSstyles.text,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 27\n      }\n    }, \"Number: \", value.number);\n  })), \")\", _react.default.createElement(_reactNative.Button, {\n    title: \"next\",\n    color: \"#224E41\",\n    onPress: function onPress() {\n      return navigation.navigate('InputSubject');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 21\n    }\n  }));\n};\n\nvar FSstyles = _reactNative.StyleSheet.create({\n  button: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingVertical: 12,\n    paddingHorizontal: 24,\n    borderRadius: 0,\n    elevation: 3,\n    backgroundColor: _theme.theme.color1\n  },\n  text: {\n    fontsize: 40,\n    lineHeight: 14,\n    fontWeight: 'bold',\n    letterSpacing: 0.25,\n    color: _theme.theme.color1\n  },\n  view: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: _theme.theme.dark\n  }\n});\n\nvar _default = FirstSetting;\nexports.default = _default;","map":{"version":3,"sources":["D:/merge/please-attendence/src/navigation/pages/FirstSetting.js"],"names":["SubjectContext","number","FirstSetting","navigation","FSstyles","view","value","text","navigate","StyleSheet","create","button","alignItems","justifyContent","paddingVertical","paddingHorizontal","borderRadius","elevation","backgroundColor","theme","color1","fontsize","lineHeight","fontWeight","letterSpacing","color","flex","dark"],"mappings":";;;;;AAAA;;AACA;;AAIA;;AAEA;;;;;;;;;AAEA,IAAMA,cAAc,GAAG,0BAAc;AACjCC,EAAAA,MAAM,EAAE;AADyB,CAAd,CAAvB;;AAMA,IAAMC,YAAY,GAAG,SAAfA,YAAe,OAAkB;AAAA,MAAhBC,UAAgB,QAAhBA,UAAgB;AACnC,SACQ,6BAAC,iBAAD;AAAM,IAAA,KAAK,EAAEC,QAAQ,CAACC,IAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAEJ,6BAAC,cAAD,CAAgB,QAAhB;AAAyB,IAAA,KAAK,EAAI;AAACJ,MAAAA,MAAM,EAAED,cAAc,CAACC;AAAxB,KAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,6BAAC,cAAD,CAAgB,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK,UAAAK,KAAK;AAAA,WAAI,6BAAC,IAAD;AAAM,MAAA,KAAK,EAAIF,QAAQ,CAACG,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAuCD,KAAK,CAACL,MAA7C,CAAJ;AAAA,GADV,CADJ,CAFI,OAUQ,6BAAC,mBAAD;AACR,IAAA,KAAK,EAAG,MADA;AAER,IAAA,KAAK,EAAG,SAFA;AAGR,IAAA,OAAO,EAAI;AAAA,aAAME,UAAU,CAACK,QAAX,CAAoB,cAApB,CAAN;AAAA,KAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVR,CADR;AAkBH,CAnBD;;AAsBA,IAAMJ,QAAQ,GAAGK,wBAAWC,MAAX,CAAkB;AAC/BC,EAAAA,MAAM,EAAE;AACJC,IAAAA,UAAU,EAAE,QADR;AAEJC,IAAAA,cAAc,EAAE,QAFZ;AAGJC,IAAAA,eAAe,EAAE,EAHb;AAIJC,IAAAA,iBAAiB,EAAE,EAJf;AAKJC,IAAAA,YAAY,EAAE,CALV;AAMJC,IAAAA,SAAS,EAAE,CANP;AAOJC,IAAAA,eAAe,EAAEC,aAAMC;AAPnB,GADuB;AAU/Bb,EAAAA,IAAI,EAAE;AACFc,IAAAA,QAAQ,EAAE,EADR;AAEFC,IAAAA,UAAU,EAAE,EAFV;AAGFC,IAAAA,UAAU,EAAE,MAHV;AAIFC,IAAAA,aAAa,EAAE,IAJb;AAKFC,IAAAA,KAAK,EAAEN,aAAMC;AALX,GAVyB;AAiB/Bf,EAAAA,IAAI,EAAE;AACFqB,IAAAA,IAAI,EAAE,CADJ;AAEFb,IAAAA,cAAc,EAAE,QAFd;AAGFD,IAAAA,UAAU,EAAE,QAHV;AAIFM,IAAAA,eAAe,EAAEC,aAAMQ;AAJrB;AAjByB,CAAlB,CAAjB;;eAyBezB,Y","sourcesContent":["import React, { createContext } from \"react\";\r\nimport { StyleSheet } from \"react-native\";\r\nimport { View } from \"react-native\";\r\nimport { Button } from \"react-native\";\r\nimport { useContext } from 'react';\r\nimport { TextInput } from 'react-native-gesture-handler';\r\nimport { useState } from 'react';\r\nimport { theme } from \"../../components/theme\";\r\n\r\nconst SubjectContext = createContext({\r\n    number: 6,\r\n});\r\n\r\n\r\n\r\nconst FirstSetting = ({navigation}) => {\r\n    return (\r\n            <View style={FSstyles.view}>\r\n                return(\r\n        <SubjectContext.Provider value = {{number: SubjectContext.number}}>\r\n            <SubjectContext.Consumer>\r\n                {value => <Text style = {FSstyles.text}>Number: {value.number}</Text>}\r\n            </SubjectContext.Consumer>\r\n\r\n        </SubjectContext.Provider>\r\n    )\r\n                    \r\n                    <Button \r\n            title = \"next\"\r\n            color = \"#224E41\"\r\n            onPress = {() => navigation.navigate('InputSubject')} />\r\n            </View>\r\n\r\n    )\r\n}\r\n\r\n\r\nconst FSstyles = StyleSheet.create({\r\n    button: {\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        paddingVertical: 12,\r\n        paddingHorizontal: 24,\r\n        borderRadius: 0,\r\n        elevation: 3,\r\n        backgroundColor: theme.color1,\r\n    },\r\n    text: {\r\n        fontsize: 40,\r\n        lineHeight: 14,\r\n        fontWeight: 'bold',\r\n        letterSpacing: 0.25,\r\n        color: theme.color1,\r\n    },\r\n    view: {\r\n        flex: 1,\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        backgroundColor: theme.dark,\r\n    }\r\n});\r\n\r\nexport default FirstSetting;\r\n\r\n"]},"metadata":{},"sourceType":"script"}