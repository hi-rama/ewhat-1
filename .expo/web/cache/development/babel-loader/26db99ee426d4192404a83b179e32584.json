{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _dateFns = require(\"date-fns\");\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _CalendarView = _interopRequireDefault(require(\"../../components/CalendarView\"));\n\nvar _LogContext = _interopRequireDefault(require(\"../../components/context/LogContext\"));\n\nvar _SearchList = _interopRequireDefault(require(\"../../components/SearchSceen/SearchList\"));\n\nvar _jsxFileName = \"D:\\\\folder\\\\please-attendence\\\\src\\\\navigation\\\\pages\\\\Calendars.js\";\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction CalendarScreen() {\n  var _useContext = (0, _react.useContext)(_LogContext.default),\n      logs = _useContext.logs;\n\n  var _useState = (0, _react.useState)((0, _dateFns.format)(new Date(), 'yyyy-MM-dd')),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      selectedDate = _useState2[0],\n      setSelectedDate = _useState2[1];\n\n  var markedDates = (0, _react.useMemo)(function () {\n    return logs.reduce(function (acc, current) {\n      var formattedDate = (0, _dateFns.format)(new Date(current.date), 'yyyy-MM-dd');\n      acc[formattedDate] = {\n        marked: true\n      };\n      return acc;\n    }, {});\n  }, [logs]);\n  var filteredLogs = logs.filter(function (log) {\n    return (0, _dateFns.format)(new Date(log.date), 'yyyy-MM-dd') === selectedDate;\n  });\n  return _react.default.createElement(_SearchList.default, {\n    logs: filteredLogs,\n    ListHeaderComponent: _react.default.createElement(_CalendarView.default, {\n      markedDates: markedDates,\n      selectedDate: selectedDate,\n      onSelectDate: setSelectedDate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  });\n}\n\nvar _default = CalendarScreen;\nexports.default = _default;","map":{"version":3,"sources":["D:/folder/please-attendence/src/navigation/pages/Calendars.js"],"names":["CalendarScreen","LogContext","logs","Date","selectedDate","setSelectedDate","markedDates","reduce","acc","current","formattedDate","date","marked","filteredLogs","filter","log"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;;;;;;;AAEA,SAASA,cAAT,GAA0B;AACxB,oBAAe,uBAAWC,mBAAX,CAAf;AAAA,MAAOC,IAAP,eAAOA,IAAP;;AACA,kBAAwC,qBACtC,qBAAO,IAAIC,IAAJ,EAAP,EAAmB,YAAnB,CADsC,CAAxC;AAAA;AAAA,MAAOC,YAAP;AAAA,MAAqBC,eAArB;;AAIA,MAAMC,WAAW,GAAG,oBAClB;AAAA,WACEJ,IAAI,CAACK,MAAL,CAAY,UAACC,GAAD,EAAMC,OAAN,EAAkB;AAC5B,UAAMC,aAAa,GAAG,qBAAO,IAAIP,IAAJ,CAASM,OAAO,CAACE,IAAjB,CAAP,EAA+B,YAA/B,CAAtB;AACAH,MAAAA,GAAG,CAACE,aAAD,CAAH,GAAqB;AAACE,QAAAA,MAAM,EAAE;AAAT,OAArB;AACA,aAAOJ,GAAP;AACD,KAJD,EAIG,EAJH,CADF;AAAA,GADkB,EAOlB,CAACN,IAAD,CAPkB,CAApB;AAUA,MAAMW,YAAY,GAAGX,IAAI,CAACY,MAAL,CACnB,UAAAC,GAAG;AAAA,WAAI,qBAAO,IAAIZ,IAAJ,CAASY,GAAG,CAACJ,IAAb,CAAP,EAA2B,YAA3B,MAA6CP,YAAjD;AAAA,GADgB,CAArB;AAIA,SACE,6BAAC,mBAAD;AACE,IAAA,IAAI,EAAES,YADR;AAEE,IAAA,mBAAmB,EACjB,6BAAC,qBAAD;AACE,MAAA,WAAW,EAAEP,WADf;AAEE,MAAA,YAAY,EAAEF,YAFhB;AAGE,MAAA,YAAY,EAAEC,eAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAYD;;eAEcL,c","sourcesContent":["import {format} from 'date-fns';\nimport React ,{useContext, useMemo, useState} from 'react';\nimport CalendarView from '../../components/CalendarView';\nimport LogContext from  '../../components/context/LogContext';\nimport SearchList from '../../components/SearchSceen/SearchList';\n\nfunction CalendarScreen() {\n  const {logs} = useContext(LogContext);\n  const [selectedDate, setSelectedDate] = useState(\n    format(new Date(), 'yyyy-MM-dd'),\n  );\n    \n  const markedDates = useMemo(\n    () =>\n      logs.reduce((acc, current) => {\n        const formattedDate = format(new Date(current.date), 'yyyy-MM-dd');\n        acc[formattedDate] = {marked: true};\n        return acc;\n      }, {}),\n    [logs],\n  );\n\n  const filteredLogs = logs.filter(\n    log => format(new Date(log.date), 'yyyy-MM-dd') === selectedDate,\n  );\n\n  return (\n    <SearchList\n      logs={filteredLogs}\n      ListHeaderComponent={\n        <CalendarView\n          markedDates={markedDates}\n          selectedDate={selectedDate}\n          onSelectDate={setSelectedDate}\n        />\n      }\n    />\n  );\n}\n\nexport default CalendarScreen;\n"]},"metadata":{},"sourceType":"script"}