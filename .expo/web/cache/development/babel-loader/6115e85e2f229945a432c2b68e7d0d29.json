{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _includes = _interopRequireDefault(require(\"lodash/includes\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _memoizeOne = _interopRequireDefault(require(\"memoize-one\"));\n\nvar _xdate = _interopRequireDefault(require(\"xdate\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _componentUpdater = require(\"../../componentUpdater\");\n\nvar _dateutils = require(\"../../dateutils\");\n\nvar _testIDs = require(\"../../testIDs\");\n\nvar _style = _interopRequireDefault(require(\"./style\"));\n\nvar _jsxFileName = \"D:\\\\folder\\\\please-attendence\\\\node_modules\\\\react-native-calendars\\\\src\\\\calendar\\\\header\\\\index.js\";\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar CalendarHeader = function (_Component) {\n  (0, _inherits2.default)(CalendarHeader, _Component);\n\n  var _super = _createSuper(CalendarHeader);\n\n  function CalendarHeader(props) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, CalendarHeader);\n    _this = _super.call(this, props);\n\n    _this.addMonth = function () {\n      var addMonth = _this.props.addMonth;\n      addMonth == null ? void 0 : addMonth(1);\n    };\n\n    _this.subtractMonth = function () {\n      var addMonth = _this.props.addMonth;\n      addMonth == null ? void 0 : addMonth(-1);\n    };\n\n    _this.onPressLeft = function () {\n      var _this$props = _this.props,\n          onPressArrowLeft = _this$props.onPressArrowLeft,\n          month = _this$props.month;\n\n      if (typeof onPressArrowLeft === 'function') {\n        return onPressArrowLeft(_this.subtractMonth, month);\n      }\n\n      return _this.subtractMonth();\n    };\n\n    _this.onPressRight = function () {\n      var _this$props2 = _this.props,\n          onPressArrowRight = _this$props2.onPressArrowRight,\n          month = _this$props2.month;\n\n      if (typeof onPressArrowRight === 'function') {\n        return onPressArrowRight(_this.addMonth, month);\n      }\n\n      return _this.addMonth();\n    };\n\n    _this.renderWeekDays = (0, _memoizeOne.default)(function (weekDaysNames) {\n      var disabledDaysIndexes = _this.props.disabledDaysIndexes;\n      return weekDaysNames.map(function (day, idx) {\n        var dayStyle = [_this.style.dayHeader];\n\n        if ((0, _includes.default)(disabledDaysIndexes, idx)) {\n          dayStyle.push(_this.style.disabledDayHeader);\n        }\n\n        if (_this.style[\"dayTextAtIndex\" + idx]) {\n          dayStyle.push(_this.style[\"dayTextAtIndex\" + idx]);\n        }\n\n        return _react.default.createElement(_reactNative.Text, {\n          allowFontScaling: false,\n          key: idx,\n          style: dayStyle,\n          numberOfLines: 1,\n          accessibilityLabel: '',\n          __self: (0, _assertThisInitialized2.default)(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 21\n          }\n        }, day);\n      });\n    });\n\n    _this.renderHeader = function () {\n      var _this$props3 = _this.props,\n          renderHeader = _this$props3.renderHeader,\n          month = _this$props3.month,\n          monthFormat = _this$props3.monthFormat,\n          testID = _this$props3.testID,\n          webAriaLevel = _this$props3.webAriaLevel;\n      var webProps = _reactNative.Platform.OS === 'web' ? {\n        'aria-level': webAriaLevel\n      } : {};\n\n      if (renderHeader) {\n        return renderHeader(month);\n      }\n\n      return _react.default.createElement(_react.Fragment, {\n        __self: (0, _assertThisInitialized2.default)(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 17\n        }\n      }, _react.default.createElement(_reactNative.Text, (0, _extends2.default)({\n        allowFontScaling: false,\n        style: _this.style.monthText,\n        testID: testID ? _testIDs.HEADER_MONTH_NAME + \"-\" + testID : _testIDs.HEADER_MONTH_NAME\n      }, webProps, {\n        __self: (0, _assertThisInitialized2.default)(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 9\n        }\n      }), (0, _dateutils.formatNumbers)(month == null ? void 0 : month.toString(monthFormat))));\n    };\n\n    _this.onAccessibilityAction = function (event) {\n      switch (event.nativeEvent.actionName) {\n        case 'decrement':\n          _this.onPressLeft();\n\n          break;\n\n        case 'increment':\n          _this.onPressRight();\n\n          break;\n\n        default:\n          break;\n      }\n    };\n\n    _this.style = (0, _style.default)(props.theme);\n    return _this;\n  }\n\n  (0, _createClass2.default)(CalendarHeader, [{\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps) {\n      var _nextProps$month, _this$props$month;\n\n      if (((_nextProps$month = nextProps.month) == null ? void 0 : _nextProps$month.toString('yyyy MM')) !== ((_this$props$month = this.props.month) == null ? void 0 : _this$props$month.toString('yyyy MM'))) {\n        return true;\n      }\n\n      return (0, _componentUpdater.shouldUpdate)(this.props, nextProps, ['displayLoadingIndicator', 'hideDayNames', 'firstDay', 'showWeekNumbers', 'monthFormat', 'renderArrow', 'disableArrowLeft', 'disableArrowRight', 'renderHeader']);\n    }\n  }, {\n    key: \"renderArrow\",\n    value: function renderArrow(direction) {\n      var _this$props4 = this.props,\n          hideArrows = _this$props4.hideArrows,\n          disableArrowLeft = _this$props4.disableArrowLeft,\n          disableArrowRight = _this$props4.disableArrowRight,\n          renderArrow = _this$props4.renderArrow,\n          testID = _this$props4.testID;\n\n      if (hideArrows) {\n        return _react.default.createElement(_reactNative.View, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 20\n          }\n        });\n      }\n\n      var isLeft = direction === 'left';\n      var id = isLeft ? _testIDs.CHANGE_MONTH_LEFT_ARROW : _testIDs.CHANGE_MONTH_RIGHT_ARROW;\n      var testId = testID ? id + \"-\" + testID : id;\n      var onPress = isLeft ? this.onPressLeft : this.onPressRight;\n      var imageSource = isLeft ? require('../img/previous.png') : require('../img/next.png');\n      var renderArrowDirection = isLeft ? 'left' : 'right';\n      var shouldDisable = isLeft ? disableArrowLeft : disableArrowRight;\n      return _react.default.createElement(_reactNative.TouchableOpacity, {\n        onPress: !shouldDisable ? onPress : undefined,\n        disabled: shouldDisable,\n        style: this.style.arrow,\n        hitSlop: {\n          left: 20,\n          right: 20,\n          top: 20,\n          bottom: 20\n        },\n        testID: testId,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 17\n        }\n      }, renderArrow ? renderArrow(renderArrowDirection) : _react.default.createElement(_reactNative.Image, {\n        source: imageSource,\n        style: shouldDisable ? this.style.disabledArrowImage : this.style.arrowImage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 63\n        }\n      }));\n    }\n  }, {\n    key: \"renderIndicator\",\n    value: function renderIndicator() {\n      var _this$props5 = this.props,\n          displayLoadingIndicator = _this$props5.displayLoadingIndicator,\n          theme = _this$props5.theme,\n          testID = _this$props5.testID;\n\n      if (displayLoadingIndicator) {\n        return _react.default.createElement(_reactNative.ActivityIndicator, {\n          color: theme == null ? void 0 : theme.indicatorColor,\n          testID: testID ? _testIDs.HEADER_LOADING_INDICATOR + \"-\" + testID : _testIDs.HEADER_LOADING_INDICATOR,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 21\n          }\n        });\n      }\n    }\n  }, {\n    key: \"renderDayNames\",\n    value: function renderDayNames() {\n      var _this$props6 = this.props,\n          firstDay = _this$props6.firstDay,\n          hideDayNames = _this$props6.hideDayNames,\n          showWeekNumbers = _this$props6.showWeekNumbers,\n          testID = _this$props6.testID;\n      var weekDaysNames = (0, _dateutils.weekDayNames)(firstDay);\n\n      if (!hideDayNames) {\n        return _react.default.createElement(_reactNative.View, {\n          style: this.style.week,\n          testID: testID ? _testIDs.HEADER_DAY_NAMES + \"-\" + testID : _testIDs.HEADER_DAY_NAMES,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 21\n          }\n        }, showWeekNumbers && _react.default.createElement(_reactNative.Text, {\n          allowFontScaling: false,\n          style: this.style.dayHeader,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 31\n          }\n        }), this.renderWeekDays(weekDaysNames));\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props7 = this.props,\n          style = _this$props7.style,\n          testID = _this$props7.testID;\n      return _react.default.createElement(_reactNative.View, {\n        testID: testID,\n        style: style,\n        accessible: true,\n        accessibilityRole: 'adjustable',\n        accessibilityActions: [{\n          name: 'increment',\n          label: 'increment'\n        }, {\n          name: 'decrement',\n          label: 'decrement'\n        }],\n        onAccessibilityAction: this.onAccessibilityAction,\n        accessibilityElementsHidden: this.props.accessibilityElementsHidden,\n        importantForAccessibility: this.props.importantForAccessibility,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 17\n        }\n      }, _react.default.createElement(_reactNative.View, {\n        style: this.style.header,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 9\n        }\n      }, this.renderArrow('left'), _react.default.createElement(_reactNative.View, {\n        style: this.style.headerContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }\n      }, this.renderHeader(), this.renderIndicator()), this.renderArrow('right')), this.renderDayNames());\n    }\n  }]);\n  return CalendarHeader;\n}(_react.Component);\n\nCalendarHeader.displayName = 'IGNORE';\nCalendarHeader.propTypes = {\n  theme: _propTypes.default.object,\n  firstDay: _propTypes.default.number,\n  displayLoadingIndicator: _propTypes.default.bool,\n  showWeekNumbers: _propTypes.default.bool,\n  month: _propTypes.default.instanceOf(_xdate.default),\n  addMonth: _propTypes.default.func,\n  monthFormat: _propTypes.default.string,\n  hideDayNames: _propTypes.default.bool,\n  hideArrows: _propTypes.default.bool,\n  renderArrow: _propTypes.default.func,\n  onPressArrowLeft: _propTypes.default.func,\n  onPressArrowRight: _propTypes.default.func,\n  disableArrowLeft: _propTypes.default.bool,\n  disableArrowRight: _propTypes.default.bool,\n  disabledDaysIndexes: _propTypes.default.arrayOf(_propTypes.default.number),\n  renderHeader: _propTypes.default.any,\n  webAriaLevel: _propTypes.default.number\n};\nCalendarHeader.defaultProps = {\n  monthFormat: 'MMMM yyyy',\n  webAriaLevel: 1\n};\nvar _default = CalendarHeader;\nexports.default = _default;","map":{"version":3,"sources":["D:/folder/please-attendence/node_modules/react-native-calendars/src/calendar/header/index.js"],"names":["CalendarHeader","props","addMonth","subtractMonth","onPressLeft","onPressArrowLeft","month","onPressRight","onPressArrowRight","renderWeekDays","weekDaysNames","disabledDaysIndexes","map","day","idx","dayStyle","style","dayHeader","push","disabledDayHeader","renderHeader","monthFormat","testID","webAriaLevel","webProps","Platform","OS","monthText","HEADER_MONTH_NAME","toString","onAccessibilityAction","event","nativeEvent","actionName","theme","nextProps","direction","hideArrows","disableArrowLeft","disableArrowRight","renderArrow","isLeft","id","CHANGE_MONTH_LEFT_ARROW","CHANGE_MONTH_RIGHT_ARROW","testId","onPress","imageSource","require","renderArrowDirection","shouldDisable","undefined","arrow","left","right","top","bottom","disabledArrowImage","arrowImage","displayLoadingIndicator","indicatorColor","HEADER_LOADING_INDICATOR","firstDay","hideDayNames","showWeekNumbers","week","HEADER_DAY_NAMES","name","label","accessibilityElementsHidden","importantForAccessibility","header","headerContainer","renderIndicator","renderDayNames","Component","displayName","propTypes","PropTypes","object","number","bool","instanceOf","XDate","func","string","arrayOf","any","defaultProps"],"mappings":"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","sourcesContent":["import includes from 'lodash/includes';\nimport PropTypes from 'prop-types';\nimport memoize from 'memoize-one';\nimport XDate from 'xdate';\nimport React, { Component, Fragment } from 'react';\nimport { ActivityIndicator, Platform, View, Text, TouchableOpacity, Image } from 'react-native';\nimport { shouldUpdate } from '../../componentUpdater';\nimport { formatNumbers, weekDayNames } from '../../dateutils';\nimport { CHANGE_MONTH_LEFT_ARROW, CHANGE_MONTH_RIGHT_ARROW, HEADER_DAY_NAMES, HEADER_LOADING_INDICATOR, HEADER_MONTH_NAME\n// @ts-expect-error\n } from '../../testIDs';\nimport styleConstructor from './style';\nclass CalendarHeader extends Component {\n    static displayName = 'IGNORE';\n    static propTypes = {\n        theme: PropTypes.object,\n        firstDay: PropTypes.number,\n        displayLoadingIndicator: PropTypes.bool,\n        showWeekNumbers: PropTypes.bool,\n        month: PropTypes.instanceOf(XDate),\n        addMonth: PropTypes.func,\n        /** Month format in the title. Formatting values: http://arshaw.com/xdate/#Formatting */\n        monthFormat: PropTypes.string,\n        /**  Hide day names. Default = false */\n        hideDayNames: PropTypes.bool,\n        /** Hide month navigation arrows. Default = false */\n        hideArrows: PropTypes.bool,\n        /** Replace default arrows with custom ones (direction can be 'left' or 'right') */\n        renderArrow: PropTypes.func,\n        /** Handler which gets executed when press arrow icon left. It receive a callback can go back month */\n        onPressArrowLeft: PropTypes.func,\n        /** Handler which gets executed when press arrow icon right. It receive a callback can go next month */\n        onPressArrowRight: PropTypes.func,\n        /** Disable left arrow. Default = false */\n        disableArrowLeft: PropTypes.bool,\n        /** Disable right arrow. Default = false */\n        disableArrowRight: PropTypes.bool,\n        /** Apply custom disable color to selected day indexes */\n        disabledDaysIndexes: PropTypes.arrayOf(PropTypes.number),\n        /** Replace default month and year title with custom one. the function receive a date as parameter. */\n        renderHeader: PropTypes.any,\n        /** Provide aria-level for calendar heading for proper accessibility when used with web (react-native-web) */\n        webAriaLevel: PropTypes.number\n    };\n    static defaultProps = {\n        monthFormat: 'MMMM yyyy',\n        webAriaLevel: 1\n    };\n    style;\n    constructor(props) {\n        super(props);\n        this.style = styleConstructor(props.theme);\n    }\n    shouldComponentUpdate(nextProps) {\n        if (nextProps.month?.toString('yyyy MM') !== this.props.month?.toString('yyyy MM')) {\n            return true;\n        }\n        return shouldUpdate(this.props, nextProps, [\n            'displayLoadingIndicator',\n            'hideDayNames',\n            'firstDay',\n            'showWeekNumbers',\n            'monthFormat',\n            'renderArrow',\n            'disableArrowLeft',\n            'disableArrowRight',\n            'renderHeader'\n        ]);\n    }\n    addMonth = () => {\n        const { addMonth } = this.props;\n        addMonth?.(1);\n    };\n    subtractMonth = () => {\n        const { addMonth } = this.props;\n        addMonth?.(-1);\n    };\n    onPressLeft = () => {\n        const { onPressArrowLeft, month } = this.props;\n        if (typeof onPressArrowLeft === 'function') {\n            return onPressArrowLeft(this.subtractMonth, month);\n        }\n        return this.subtractMonth();\n    };\n    onPressRight = () => {\n        const { onPressArrowRight, month } = this.props;\n        if (typeof onPressArrowRight === 'function') {\n            return onPressArrowRight(this.addMonth, month);\n        }\n        return this.addMonth();\n    };\n    renderWeekDays = memoize(weekDaysNames => {\n        const { disabledDaysIndexes } = this.props;\n        return weekDaysNames.map((day, idx) => {\n            const dayStyle = [this.style.dayHeader];\n            if (includes(disabledDaysIndexes, idx)) {\n                dayStyle.push(this.style.disabledDayHeader);\n            }\n            if (this.style[`dayTextAtIndex${idx}`]) {\n                dayStyle.push(this.style[`dayTextAtIndex${idx}`]);\n            }\n            return (<Text allowFontScaling={false} key={idx} style={dayStyle} numberOfLines={1} accessibilityLabel={''}>\n          {day}\n        </Text>);\n        });\n    });\n    renderHeader = () => {\n        const { renderHeader, month, monthFormat, testID, webAriaLevel } = this.props;\n        const webProps = Platform.OS === 'web' ? { 'aria-level': webAriaLevel } : {};\n        if (renderHeader) {\n            return renderHeader(month);\n        }\n        return (<Fragment>\n        <Text allowFontScaling={false} style={this.style.monthText} testID={testID ? `${HEADER_MONTH_NAME}-${testID}` : HEADER_MONTH_NAME} {...webProps}>\n          {formatNumbers(month?.toString(monthFormat))}\n        </Text>\n      </Fragment>);\n    };\n    renderArrow(direction) {\n        const { hideArrows, disableArrowLeft, disableArrowRight, renderArrow, testID } = this.props;\n        if (hideArrows) {\n            return <View />;\n        }\n        const isLeft = direction === 'left';\n        const id = isLeft ? CHANGE_MONTH_LEFT_ARROW : CHANGE_MONTH_RIGHT_ARROW;\n        const testId = testID ? `${id}-${testID}` : id;\n        const onPress = isLeft ? this.onPressLeft : this.onPressRight;\n        const imageSource = isLeft ? require('../img/previous.png') : require('../img/next.png');\n        const renderArrowDirection = isLeft ? 'left' : 'right';\n        const shouldDisable = isLeft ? disableArrowLeft : disableArrowRight;\n        return (<TouchableOpacity onPress={!shouldDisable ? onPress : undefined} disabled={shouldDisable} style={this.style.arrow} hitSlop={{ left: 20, right: 20, top: 20, bottom: 20 }} testID={testId}>\n        {renderArrow ? (renderArrow(renderArrowDirection)) : (<Image source={imageSource} style={shouldDisable ? this.style.disabledArrowImage : this.style.arrowImage}/>)}\n      </TouchableOpacity>);\n    }\n    renderIndicator() {\n        const { displayLoadingIndicator, theme, testID } = this.props;\n        if (displayLoadingIndicator) {\n            return (<ActivityIndicator color={theme?.indicatorColor} testID={testID ? `${HEADER_LOADING_INDICATOR}-${testID}` : HEADER_LOADING_INDICATOR}/>);\n        }\n    }\n    renderDayNames() {\n        const { firstDay, hideDayNames, showWeekNumbers, testID } = this.props;\n        const weekDaysNames = weekDayNames(firstDay);\n        if (!hideDayNames) {\n            return (<View style={this.style.week} testID={testID ? `${HEADER_DAY_NAMES}-${testID}` : HEADER_DAY_NAMES}>\n          {showWeekNumbers && <Text allowFontScaling={false} style={this.style.dayHeader}></Text>}\n          {this.renderWeekDays(weekDaysNames)}\n        </View>);\n        }\n    }\n    render() {\n        const { style, testID } = this.props;\n        return (<View testID={testID} style={style} accessible accessibilityRole={'adjustable'} accessibilityActions={[\n                { name: 'increment', label: 'increment' },\n                { name: 'decrement', label: 'decrement' }\n            ]} onAccessibilityAction={this.onAccessibilityAction} accessibilityElementsHidden={this.props.accessibilityElementsHidden} // iOS\n         importantForAccessibility={this.props.importantForAccessibility} // Android\n        >\n        <View style={this.style.header}>\n          {this.renderArrow('left')}\n          <View style={this.style.headerContainer}>\n            {this.renderHeader()}\n            {this.renderIndicator()}\n          </View>\n          {this.renderArrow('right')}\n        </View>\n        {this.renderDayNames()}\n      </View>);\n    }\n    onAccessibilityAction = (event) => {\n        switch (event.nativeEvent.actionName) {\n            case 'decrement':\n                this.onPressLeft();\n                break;\n            case 'increment':\n                this.onPressRight();\n                break;\n            default:\n                break;\n        }\n    };\n}\nexport default CalendarHeader;\n"]},"metadata":{},"sourceType":"script"}