{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _invoke = _interopRequireDefault(require(\"lodash/invoke\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _xdate = _interopRequireDefault(require(\"xdate\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _componentUpdater = require(\"../componentUpdater\");\n\nvar _interface = require(\"../interface\");\n\nvar _dateutils = require(\"../dateutils\");\n\nvar _testIDs = require(\"../testIDs\");\n\nvar _style = _interopRequireDefault(require(\"./style\"));\n\nvar _calendar = _interopRequireDefault(require(\"../calendar\"));\n\nvar _item = _interopRequireDefault(require(\"./item\"));\n\nvar _index = _interopRequireDefault(require(\"../calendar/header/index\"));\n\nvar _jsxFileName = \"D:\\\\folder\\\\please-attendence\\\\node_modules\\\\react-native-calendars\\\\src\\\\calendar-list\\\\index.js\";\nvar _excluded = [\"calendarStyle\", \"horizontal\", \"calendarWidth\", \"testID\"];\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar _Dimensions$get = _reactNative.Dimensions.get('window'),\n    width = _Dimensions$get.width;\n\nvar CALENDAR_WIDTH = width;\nvar CALENDAR_HEIGHT = 360;\nvar PAST_SCROLL_RANGE = 50;\nvar FUTURE_SCROLL_RANGE = 50;\n\nvar CalendarList = function (_Component) {\n  (0, _inherits2.default)(CalendarList, _Component);\n\n  var _super = _createSuper(CalendarList);\n\n  function CalendarList(props) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, CalendarList);\n    _this = _super.call(this, props);\n    _this.list = _react.default.createRef();\n    _this.viewabilityConfig = {\n      itemVisiblePercentThreshold: 20\n    };\n\n    _this.scrollToMonth = function (m) {\n      var _this$list, _this$list$current;\n\n      var _this$props = _this.props,\n          horizontal = _this$props.horizontal,\n          _this$props$calendarH = _this$props.calendarHeight,\n          calendarHeight = _this$props$calendarH === void 0 ? CALENDAR_HEIGHT : _this$props$calendarH,\n          _this$props$calendarW = _this$props.calendarWidth,\n          calendarWidth = _this$props$calendarW === void 0 ? CALENDAR_WIDTH : _this$props$calendarW,\n          _this$props$pastScrol = _this$props.pastScrollRange,\n          pastScrollRange = _this$props$pastScrol === void 0 ? PAST_SCROLL_RANGE : _this$props$pastScrol,\n          _this$props$animateSc = _this$props.animateScroll,\n          animateScroll = _this$props$animateSc === void 0 ? false : _this$props$animateSc;\n      var month = (0, _interface.parseDate)(m);\n      var scrollTo = month || _this.state.openDate;\n      var diffMonths = Math.round(_this.state.openDate.clone().setDate(1).diffMonths(scrollTo.clone().setDate(1)));\n      var size = horizontal ? calendarWidth : calendarHeight;\n      var scrollAmount = size * pastScrollRange + diffMonths * size;\n      (_this$list = _this.list) == null ? void 0 : (_this$list$current = _this$list.current) == null ? void 0 : _this$list$current.scrollToOffset({\n        offset: scrollAmount,\n        animated: animateScroll\n      });\n    };\n\n    _this.getItemLayout = function (_, index) {\n      var _this$props2 = _this.props,\n          horizontal = _this$props2.horizontal,\n          _this$props2$calendar = _this$props2.calendarHeight,\n          calendarHeight = _this$props2$calendar === void 0 ? CALENDAR_HEIGHT : _this$props2$calendar,\n          _this$props2$calendar2 = _this$props2.calendarWidth,\n          calendarWidth = _this$props2$calendar2 === void 0 ? CALENDAR_WIDTH : _this$props2$calendar2;\n      var size = horizontal ? calendarWidth : calendarHeight;\n      return {\n        length: size,\n        offset: size * index,\n        index: index\n      };\n    };\n\n    _this.addMonth = function (count) {\n      _this.updateMonth(_this.state.currentMonth.clone().addMonths(count, true));\n    };\n\n    _this.onViewableItemsChanged = function (_ref) {\n      var viewableItems = _ref.viewableItems;\n\n      function rowIsCloseToViewable(index, distance) {\n        for (var i = 0; i < viewableItems.length; i++) {\n          if (Math.abs(index - parseInt(viewableItems[i].index)) <= distance) {\n            return true;\n          }\n        }\n\n        return false;\n      }\n\n      var rowclone = _this.state.rows;\n      var newrows = [];\n      var visibleMonths = [];\n\n      for (var i = 0; i < rowclone.length; i++) {\n        var val = rowclone[i];\n        var rowShouldBeRendered = rowIsCloseToViewable(i, 1);\n        var _this$props$pastScrol2 = _this.props.pastScrollRange,\n            pastScrollRange = _this$props$pastScrol2 === void 0 ? PAST_SCROLL_RANGE : _this$props$pastScrol2;\n\n        if (rowShouldBeRendered && !rowclone[i].getTime) {\n          val = _this.state.openDate.clone().addMonths(i - pastScrollRange, true);\n        } else if (!rowShouldBeRendered) {\n          val = _this.state.texts[i];\n        }\n\n        newrows.push(val);\n\n        if (rowIsCloseToViewable(i, 0)) {\n          var v = val instanceof _xdate.default ? val : new _xdate.default(val);\n          visibleMonths.push((0, _interface.xdateToData)(v));\n        }\n      }\n\n      (0, _invoke.default)(_this.props, 'onVisibleMonthsChange', visibleMonths);\n\n      _this.setState({\n        rows: newrows,\n        currentMonth: (0, _interface.parseDate)(visibleMonths[0])\n      });\n    };\n\n    _this.renderItem = function (_ref2) {\n      var item = _ref2.item;\n      var _this$props3 = _this.props,\n          calendarStyle = _this$props3.calendarStyle,\n          horizontal = _this$props3.horizontal,\n          calendarWidth = _this$props3.calendarWidth,\n          testID = _this$props3.testID,\n          others = (0, _objectWithoutProperties2.default)(_this$props3, _excluded);\n      return _react.default.createElement(_item.default, (0, _extends2.default)({}, others, {\n        item: item,\n        testID: testID + \"_\" + item,\n        style: calendarStyle,\n        horizontal: horizontal,\n        calendarWidth: horizontal ? calendarWidth : undefined,\n        scrollToMonth: _this.scrollToMonth,\n        __self: (0, _assertThisInitialized2.default)(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 17\n        }\n      }));\n    };\n\n    _this.style = (0, _style.default)(props.theme);\n    var rows = [];\n    var texts = [];\n    var date = (0, _interface.parseDate)(props.current) || new _xdate.default();\n\n    var _props$pastScrollRang = props.pastScrollRange,\n        _pastScrollRange = _props$pastScrollRang === void 0 ? PAST_SCROLL_RANGE : _props$pastScrollRang,\n        _props$futureScrollRa = props.futureScrollRange,\n        futureScrollRange = _props$futureScrollRa === void 0 ? FUTURE_SCROLL_RANGE : _props$futureScrollRa;\n\n    for (var i = 0; i <= _pastScrollRange + futureScrollRange; i++) {\n      var rangeDate = date.clone().addMonths(i - _pastScrollRange, true);\n      var rangeDateStr = rangeDate.toString('MMM yyyy');\n      texts.push(rangeDateStr);\n\n      if (_pastScrollRange - 1 <= i && i <= _pastScrollRange + 1 || !_pastScrollRange && i <= _pastScrollRange + 2) {\n        rows.push(rangeDate);\n      } else {\n        rows.push(rangeDateStr);\n      }\n    }\n\n    _this.state = {\n      rows: rows,\n      texts: texts,\n      openDate: date,\n      currentMonth: (0, _interface.parseDate)(props.current)\n    };\n    return _this;\n  }\n\n  (0, _createClass2.default)(CalendarList, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var prevCurrent = (0, _interface.parseDate)(prevProps.current);\n      var current = (0, _interface.parseDate)(this.props.current);\n\n      if (current && prevCurrent && current.getTime() !== prevCurrent.getTime()) {\n        this.scrollToMonth(current);\n      }\n    }\n  }, {\n    key: \"scrollToDay\",\n    value: function scrollToDay(d, offset, animated) {\n      var _this$list2, _this$list2$current;\n\n      var _this$props4 = this.props,\n          horizontal = _this$props4.horizontal,\n          _this$props4$calendar = _this$props4.calendarHeight,\n          calendarHeight = _this$props4$calendar === void 0 ? CALENDAR_HEIGHT : _this$props4$calendar,\n          _this$props4$calendar2 = _this$props4.calendarWidth,\n          calendarWidth = _this$props4$calendar2 === void 0 ? CALENDAR_WIDTH : _this$props4$calendar2,\n          _this$props4$pastScro = _this$props4.pastScrollRange,\n          pastScrollRange = _this$props4$pastScro === void 0 ? PAST_SCROLL_RANGE : _this$props4$pastScro,\n          firstDay = _this$props4.firstDay;\n      var day = (0, _interface.parseDate)(d);\n      var diffMonths = Math.round(this.state.openDate.clone().setDate(1).diffMonths(day.clone().setDate(1)));\n      var size = horizontal ? calendarWidth : calendarHeight;\n      var scrollAmount = size * pastScrollRange + diffMonths * size + (offset || 0);\n\n      if (!horizontal) {\n        var week = 0;\n        var days = (0, _dateutils.page)(day, firstDay);\n\n        for (var i = 0; i < days.length; i++) {\n          week = Math.floor(i / 7);\n\n          if ((0, _dateutils.sameDate)(days[i], day)) {\n            scrollAmount += 46 * week;\n            break;\n          }\n        }\n      }\n\n      (_this$list2 = this.list) == null ? void 0 : (_this$list2$current = _this$list2.current) == null ? void 0 : _this$list2$current.scrollToOffset({\n        offset: scrollAmount,\n        animated: animated\n      });\n    }\n  }, {\n    key: \"getMonthIndex\",\n    value: function getMonthIndex(month) {\n      var _this$props$pastScrol3 = this.props.pastScrollRange,\n          pastScrollRange = _this$props$pastScrol3 === void 0 ? PAST_SCROLL_RANGE : _this$props$pastScrol3;\n      var diffMonths = this.state.openDate.diffMonths(month) + pastScrollRange;\n      return diffMonths;\n    }\n  }, {\n    key: \"updateMonth\",\n    value: function updateMonth(day) {\n      var _this2 = this;\n\n      var doNotTriggerListeners = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      if (day.toString('yyyy MM') === this.state.currentMonth.toString('yyyy MM')) {\n        return;\n      }\n\n      this.setState({\n        currentMonth: day.clone()\n      }, function () {\n        _this2.scrollToMonth(_this2.state.currentMonth);\n\n        if (!doNotTriggerListeners) {\n          var currMont = _this2.state.currentMonth.clone();\n\n          (0, _invoke.default)(_this2.props, 'onMonthChange', (0, _interface.xdateToData)(currMont));\n          (0, _invoke.default)(_this2.props, 'onVisibleMonthsChange', [(0, _interface.xdateToData)(currMont)]);\n        }\n      });\n    }\n  }, {\n    key: \"renderStaticHeader\",\n    value: function renderStaticHeader() {\n      var _this$props5 = this.props,\n          staticHeader = _this$props5.staticHeader,\n          horizontal = _this$props5.horizontal,\n          headerStyle = _this$props5.headerStyle;\n      var useStaticHeader = staticHeader && horizontal;\n      var headerProps = (0, _componentUpdater.extractComponentProps)(_index.default, this.props);\n\n      if (useStaticHeader) {\n        return _react.default.createElement(_index.default, (0, _extends2.default)({}, headerProps, {\n          testID: _testIDs.STATIC_HEADER,\n          style: [this.style.staticHeader, headerStyle],\n          month: this.state.currentMonth,\n          addMonth: this.addMonth,\n          accessibilityElementsHidden: true,\n          importantForAccessibility: 'no-hide-descendants',\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 21\n          }\n        }));\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props6 = this.props,\n          style = _this$props6.style,\n          pastScrollRange = _this$props6.pastScrollRange,\n          futureScrollRange = _this$props6.futureScrollRange,\n          horizontal = _this$props6.horizontal,\n          showScrollIndicator = _this$props6.showScrollIndicator;\n      return _react.default.createElement(_reactNative.View, {\n        style: this.style.flatListContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 17\n        }\n      }, _react.default.createElement(_reactNative.FlatList, {\n        ref: this.list,\n        style: [this.style.container, style],\n        initialListSize: pastScrollRange + futureScrollRange + 1,\n        data: this.state.rows,\n        renderItem: this.renderItem,\n        getItemLayout: this.getItemLayout,\n        onViewableItemsChanged: this.onViewableItemsChanged,\n        viewabilityConfig: this.viewabilityConfig,\n        initialScrollIndex: this.state.openDate ? this.getMonthIndex(this.state.openDate) : undefined,\n        showsVerticalScrollIndicator: showScrollIndicator,\n        showsHorizontalScrollIndicator: horizontal && showScrollIndicator,\n        testID: this.props.testID,\n        onLayout: this.props.onLayout,\n        removeClippedSubviews: this.props.removeClippedSubviews,\n        pagingEnabled: this.props.pagingEnabled,\n        scrollEnabled: this.props.scrollEnabled,\n        scrollsToTop: this.props.scrollsToTop,\n        horizontal: this.props.horizontal,\n        keyboardShouldPersistTaps: this.props.keyboardShouldPersistTaps,\n        keyExtractor: this.props.keyExtractor,\n        onEndReachedThreshold: this.props.onEndReachedThreshold,\n        onEndReached: this.props.onEndReached,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 9\n        }\n      }), this.renderStaticHeader());\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(_, prevState) {\n      var rowClone = prevState.rows;\n      var newRows = [];\n\n      for (var i = 0; i < rowClone.length; i++) {\n        var val = prevState.texts[i];\n\n        if (rowClone[i].getTime) {\n          val = rowClone[i].clone();\n          val.propBump = rowClone[i].propBump ? rowClone[i].propBump + 1 : 1;\n        }\n\n        newRows.push(val);\n      }\n\n      return {\n        rows: newRows\n      };\n    }\n  }]);\n  return CalendarList;\n}(_react.Component);\n\nCalendarList.displayName = 'CalendarList';\nCalendarList.propTypes = (0, _extends2.default)({}, _calendar.default.propTypes, {\n  pastScrollRange: _propTypes.default.number,\n  futureScrollRange: _propTypes.default.number,\n  calendarWidth: _propTypes.default.number,\n  calendarHeight: _propTypes.default.number,\n  calendarStyle: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.number, _propTypes.default.array]),\n  staticHeader: _propTypes.default.bool,\n  showScrollIndicator: _propTypes.default.bool,\n  animateScroll: _propTypes.default.bool,\n  scrollEnabled: _propTypes.default.bool,\n  scrollsToTop: _propTypes.default.bool,\n  pagingEnabled: _propTypes.default.bool,\n  horizontal: _propTypes.default.bool,\n  keyboardShouldPersistTaps: _propTypes.default.oneOf(['never', 'always', 'handled']),\n  keyExtractor: _propTypes.default.func,\n  onEndReachedThreshold: _propTypes.default.number,\n  onEndReached: _propTypes.default.func\n});\nCalendarList.defaultProps = {\n  calendarWidth: CALENDAR_WIDTH,\n  calendarHeight: CALENDAR_HEIGHT,\n  pastScrollRange: PAST_SCROLL_RANGE,\n  futureScrollRange: FUTURE_SCROLL_RANGE,\n  showScrollIndicator: false,\n  horizontal: false,\n  scrollsToTop: false,\n  scrollEnabled: true,\n  removeClippedSubviews: _reactNative.Platform.OS === 'android',\n  keyExtractor: function keyExtractor(_, index) {\n    return String(index);\n  }\n};\nvar _default = CalendarList;\nexports.default = _default;","map":{"version":3,"sources":["D:/folder/please-attendence/node_modules/react-native-calendars/src/calendar-list/index.js"],"names":["Dimensions","get","width","CALENDAR_WIDTH","CALENDAR_HEIGHT","PAST_SCROLL_RANGE","FUTURE_SCROLL_RANGE","CalendarList","props","list","React","createRef","viewabilityConfig","itemVisiblePercentThreshold","scrollToMonth","m","horizontal","calendarHeight","calendarWidth","pastScrollRange","animateScroll","month","scrollTo","state","openDate","diffMonths","Math","round","clone","setDate","size","scrollAmount","current","scrollToOffset","offset","animated","getItemLayout","_","index","length","addMonth","count","updateMonth","currentMonth","addMonths","onViewableItemsChanged","viewableItems","rowIsCloseToViewable","distance","i","abs","parseInt","rowclone","rows","newrows","visibleMonths","val","rowShouldBeRendered","getTime","texts","push","v","XDate","setState","renderItem","item","calendarStyle","testID","others","undefined","style","theme","date","futureScrollRange","rangeDate","rangeDateStr","toString","prevProps","prevCurrent","d","firstDay","day","week","days","floor","doNotTriggerListeners","currMont","staticHeader","headerStyle","useStaticHeader","headerProps","CalendarHeader","STATIC_HEADER","showScrollIndicator","flatListContainer","container","getMonthIndex","onLayout","removeClippedSubviews","pagingEnabled","scrollEnabled","scrollsToTop","keyboardShouldPersistTaps","keyExtractor","onEndReachedThreshold","onEndReached","renderStaticHeader","prevState","rowClone","newRows","propBump","Component","displayName","propTypes","Calendar","PropTypes","number","oneOfType","object","array","bool","oneOf","func","defaultProps","Platform","OS","String"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAEA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;;;;AACA,sBAAkBA,wBAAWC,GAAX,CAAe,QAAf,CAAlB;AAAA,IAAQC,KAAR,mBAAQA,KAAR;;AACA,IAAMC,cAAc,GAAGD,KAAvB;AACA,IAAME,eAAe,GAAG,GAAxB;AACA,IAAMC,iBAAiB,GAAG,EAA1B;AACA,IAAMC,mBAAmB,GAAG,EAA5B;;IAQMC,Y;;;;;AAsDF,wBAAYC,KAAZ,EAAmB;AAAA;;AAAA;AACf,8BAAMA,KAAN;AADe,UAJnBC,IAImB,GAJZC,eAAMC,SAAN,EAIY;AAAA,UAHnBC,iBAGmB,GAHC;AAChBC,MAAAA,2BAA2B,EAAE;AADb,KAGD;;AAAA,UAuEnBC,aAvEmB,GAuEH,UAACC,CAAD,EAAO;AAAA;;AACnB,wBAAqJ,MAAKP,KAA1J;AAAA,UAAQQ,UAAR,eAAQA,UAAR;AAAA,8CAAoBC,cAApB;AAAA,UAAoBA,cAApB,sCAAqCb,eAArC;AAAA,8CAAsDc,aAAtD;AAAA,UAAsDA,aAAtD,sCAAsEf,cAAtE;AAAA,8CAAsFgB,eAAtF;AAAA,UAAsFA,eAAtF,sCAAwGd,iBAAxG;AAAA,8CAA2He,aAA3H;AAAA,UAA2HA,aAA3H,sCAA2I,KAA3I;AACA,UAAMC,KAAK,GAAG,0BAAUN,CAAV,CAAd;AACA,UAAMO,QAAQ,GAAGD,KAAK,IAAI,MAAKE,KAAL,CAAWC,QAArC;AACA,UAAMC,UAAU,GAAGC,IAAI,CAACC,KAAL,CAAW,MAAKJ,KAAL,CAAWC,QAAX,CAAoBI,KAApB,GAA4BC,OAA5B,CAAoC,CAApC,EAAuCJ,UAAvC,CAAkDH,QAAQ,CAACM,KAAT,GAAiBC,OAAjB,CAAyB,CAAzB,CAAlD,CAAX,CAAnB;AACA,UAAMC,IAAI,GAAGd,UAAU,GAAGE,aAAH,GAAmBD,cAA1C;AACA,UAAMc,YAAY,GAAGD,IAAI,GAAGX,eAAP,GAAyBM,UAAU,GAAGK,IAA3D;AACA,0BAAKrB,IAAL,sDAAWuB,OAAX,wCAAoBC,cAApB,CAAmC;AAAEC,QAAAA,MAAM,EAAEH,YAAV;AAAwBI,QAAAA,QAAQ,EAAEf;AAAlC,OAAnC;AACH,KA/EkB;;AAAA,UAgFnBgB,aAhFmB,GAgFH,UAACC,CAAD,EAAIC,KAAJ,EAAc;AAC1B,yBAAyF,MAAK9B,KAA9F;AAAA,UAAQQ,UAAR,gBAAQA,UAAR;AAAA,+CAAoBC,cAApB;AAAA,UAAoBA,cAApB,sCAAqCb,eAArC;AAAA,gDAAsDc,aAAtD;AAAA,UAAsDA,aAAtD,uCAAsEf,cAAtE;AACA,UAAM2B,IAAI,GAAGd,UAAU,GAAGE,aAAH,GAAmBD,cAA1C;AACA,aAAO;AACHsB,QAAAA,MAAM,EAAET,IADL;AAEHI,QAAAA,MAAM,EAAEJ,IAAI,GAAGQ,KAFZ;AAGHA,QAAAA,KAAK,EAALA;AAHG,OAAP;AAKH,KAxFkB;;AAAA,UA8FnBE,QA9FmB,GA8FR,UAACC,KAAD,EAAW;AAClB,YAAKC,WAAL,CAAiB,MAAKnB,KAAL,CAAWoB,YAAX,CAAwBf,KAAxB,GAAgCgB,SAAhC,CAA0CH,KAA1C,EAAiD,IAAjD,CAAjB;AACH,KAhGkB;;AAAA,UA8GnBI,sBA9GmB,GA8GM,gBAAuB;AAAA,UAApBC,aAAoB,QAApBA,aAAoB;;AAC5C,eAASC,oBAAT,CAA8BT,KAA9B,EAAqCU,QAArC,EAA+C;AAC3C,aAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,aAAa,CAACP,MAAlC,EAA0CU,CAAC,EAA3C,EAA+C;AAC3C,cAAIvB,IAAI,CAACwB,GAAL,CAASZ,KAAK,GAAGa,QAAQ,CAACL,aAAa,CAACG,CAAD,CAAb,CAAiBX,KAAlB,CAAzB,KAAsDU,QAA1D,EAAoE;AAChE,mBAAO,IAAP;AACH;AACJ;;AACD,eAAO,KAAP;AACH;;AACD,UAAMI,QAAQ,GAAG,MAAK7B,KAAL,CAAW8B,IAA5B;AACA,UAAMC,OAAO,GAAG,EAAhB;AACA,UAAMC,aAAa,GAAG,EAAtB;;AACA,WAAK,IAAIN,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGG,QAAQ,CAACb,MAA7B,EAAqCU,CAAC,EAAtC,EAA0C;AACtC,YAAIO,GAAG,GAAGJ,QAAQ,CAACH,CAAD,CAAlB;AACA,YAAMQ,mBAAmB,GAAGV,oBAAoB,CAACE,CAAD,EAAI,CAAJ,CAAhD;AACA,qCAAgD,MAAKzC,KAArD,CAAQW,eAAR;AAAA,YAAQA,eAAR,uCAA0Bd,iBAA1B;;AACA,YAAIoD,mBAAmB,IAAI,CAACL,QAAQ,CAACH,CAAD,CAAR,CAAYS,OAAxC,EAAiD;AAC7CF,UAAAA,GAAG,GAAG,MAAKjC,KAAL,CAAWC,QAAX,CAAoBI,KAApB,GAA4BgB,SAA5B,CAAsCK,CAAC,GAAG9B,eAA1C,EAA2D,IAA3D,CAAN;AACH,SAFD,MAGK,IAAI,CAACsC,mBAAL,EAA0B;AAC3BD,UAAAA,GAAG,GAAG,MAAKjC,KAAL,CAAWoC,KAAX,CAAiBV,CAAjB,CAAN;AACH;;AACDK,QAAAA,OAAO,CAACM,IAAR,CAAaJ,GAAb;;AACA,YAAIT,oBAAoB,CAACE,CAAD,EAAI,CAAJ,CAAxB,EAAgC;AAC5B,cAAMY,CAAC,GAAIL,GAAG,YAAYM,cAAhB,GAAyBN,GAAzB,GAA+B,IAAIM,cAAJ,CAAUN,GAAV,CAAzC;AACAD,UAAAA,aAAa,CAACK,IAAd,CAAmB,4BAAYC,CAAZ,CAAnB;AACH;AACJ;;AACD,2BAAO,MAAKrD,KAAZ,EAAmB,uBAAnB,EAA4C+C,aAA5C;;AACA,YAAKQ,QAAL,CAAc;AAEVV,QAAAA,IAAI,EAAEC,OAFI;AAGVX,QAAAA,YAAY,EAAE,0BAAUY,aAAa,CAAC,CAAD,CAAvB;AAHJ,OAAd;AAKH,KAhJkB;;AAAA,UAiJnBS,UAjJmB,GAiJN,iBAAc;AAAA,UAAXC,IAAW,SAAXA,IAAW;AACvB,yBAAwE,MAAKzD,KAA7E;AAAA,UAAQ0D,aAAR,gBAAQA,aAAR;AAAA,UAAuBlD,UAAvB,gBAAuBA,UAAvB;AAAA,UAAmCE,aAAnC,gBAAmCA,aAAnC;AAAA,UAAkDiD,MAAlD,gBAAkDA,MAAlD;AAAA,UAA6DC,MAA7D;AACA,aAAQ,6BAAC,aAAD,6BAAsBA,MAAtB;AAA8B,QAAA,IAAI,EAAEH,IAApC;AAA0C,QAAA,MAAM,EAAKE,MAAL,SAAeF,IAA/D;AAAuE,QAAA,KAAK,EAAEC,aAA9E;AAA6F,QAAA,UAAU,EAAElD,UAAzG;AAAqH,QAAA,aAAa,EAAEA,UAAU,GAAGE,aAAH,GAAmBmD,SAAjK;AAA4K,QAAA,aAAa,EAAE,MAAKvD,aAAhM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAR;AACH,KApJkB;;AAEf,UAAKwD,KAAL,GAAa,oBAAiB9D,KAAK,CAAC+D,KAAvB,CAAb;AACA,QAAMlB,IAAI,GAAG,EAAb;AACA,QAAMM,KAAK,GAAG,EAAd;AACA,QAAMa,IAAI,GAAG,0BAAUhE,KAAK,CAACwB,OAAhB,KAA4B,IAAI8B,cAAJ,EAAzC;;AACA,gCAAyFtD,KAAzF,CAAQW,eAAR;AAAA,QAAQA,gBAAR,sCAA0Bd,iBAA1B;AAAA,gCAAyFG,KAAzF,CAA6CiE,iBAA7C;AAAA,QAA6CA,iBAA7C,sCAAiEnE,mBAAjE;;AACA,SAAK,IAAI2C,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAI9B,gBAAe,GAAGsD,iBAAvC,EAA0DxB,CAAC,EAA3D,EAA+D;AAC3D,UAAMyB,SAAS,GAAGF,IAAI,CAAC5C,KAAL,GAAagB,SAAb,CAAuBK,CAAC,GAAG9B,gBAA3B,EAA4C,IAA5C,CAAlB;AACA,UAAMwD,YAAY,GAAGD,SAAS,CAACE,QAAV,CAAmB,UAAnB,CAArB;AACAjB,MAAAA,KAAK,CAACC,IAAN,CAAWe,YAAX;;AAKA,UAAKxD,gBAAe,GAAG,CAAlB,IAAuB8B,CAAvB,IAA4BA,CAAC,IAAI9B,gBAAe,GAAG,CAApD,IACC,CAACA,gBAAD,IAAoB8B,CAAC,IAAI9B,gBAAe,GAAG,CADhD,EACoD;AAChDkC,QAAAA,IAAI,CAACO,IAAL,CAAUc,SAAV;AACH,OAHD,MAIK;AACDrB,QAAAA,IAAI,CAACO,IAAL,CAAUe,YAAV;AACH;AACJ;;AACD,UAAKpD,KAAL,GAAa;AACT8B,MAAAA,IAAI,EAAJA,IADS;AAETM,MAAAA,KAAK,EAALA,KAFS;AAGTnC,MAAAA,QAAQ,EAAEgD,IAHD;AAIT7B,MAAAA,YAAY,EAAE,0BAAUnC,KAAK,CAACwB,OAAhB;AAJL,KAAb;AAvBe;AA6BlB;;;;WACD,4BAAmB6C,SAAnB,EAA8B;AAC1B,UAAMC,WAAW,GAAG,0BAAUD,SAAS,CAAC7C,OAApB,CAApB;AACA,UAAMA,OAAO,GAAG,0BAAU,KAAKxB,KAAL,CAAWwB,OAArB,CAAhB;;AACA,UAAIA,OAAO,IAAI8C,WAAX,IAA0B9C,OAAO,CAAC0B,OAAR,OAAsBoB,WAAW,CAACpB,OAAZ,EAApD,EAA2E;AACvE,aAAK5C,aAAL,CAAmBkB,OAAnB;AACH;AACJ;;;WAgBD,qBAAY+C,CAAZ,EAAe7C,MAAf,EAAuBC,QAAvB,EAAiC;AAAA;;AAC7B,yBAAwI,KAAK3B,KAA7I;AAAA,UAAQQ,UAAR,gBAAQA,UAAR;AAAA,+CAAoBC,cAApB;AAAA,UAAoBA,cAApB,sCAAqCb,eAArC;AAAA,gDAAsDc,aAAtD;AAAA,UAAsDA,aAAtD,uCAAsEf,cAAtE;AAAA,+CAAsFgB,eAAtF;AAAA,UAAsFA,eAAtF,sCAAwGd,iBAAxG;AAAA,UAA2H2E,QAA3H,gBAA2HA,QAA3H;AACA,UAAMC,GAAG,GAAG,0BAAUF,CAAV,CAAZ;AACA,UAAMtD,UAAU,GAAGC,IAAI,CAACC,KAAL,CAAW,KAAKJ,KAAL,CAAWC,QAAX,CAAoBI,KAApB,GAA4BC,OAA5B,CAAoC,CAApC,EAAuCJ,UAAvC,CAAkDwD,GAAG,CAACrD,KAAJ,GAAYC,OAAZ,CAAoB,CAApB,CAAlD,CAAX,CAAnB;AACA,UAAMC,IAAI,GAAGd,UAAU,GAAGE,aAAH,GAAmBD,cAA1C;AACA,UAAIc,YAAY,GAAGD,IAAI,GAAGX,eAAP,GAAyBM,UAAU,GAAGK,IAAtC,IAA8CI,MAAM,IAAI,CAAxD,CAAnB;;AACA,UAAI,CAAClB,UAAL,EAAiB;AACb,YAAIkE,IAAI,GAAG,CAAX;AACA,YAAMC,IAAI,GAAG,qBAAKF,GAAL,EAAUD,QAAV,CAAb;;AACA,aAAK,IAAI/B,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGkC,IAAI,CAAC5C,MAAzB,EAAiCU,CAAC,EAAlC,EAAsC;AAClCiC,UAAAA,IAAI,GAAGxD,IAAI,CAAC0D,KAAL,CAAWnC,CAAC,GAAG,CAAf,CAAP;;AACA,cAAI,yBAASkC,IAAI,CAAClC,CAAD,CAAb,EAAkBgC,GAAlB,CAAJ,EAA4B;AACxBlD,YAAAA,YAAY,IAAI,KAAKmD,IAArB;AACA;AACH;AACJ;AACJ;;AACD,0BAAKzE,IAAL,wDAAWuB,OAAX,yCAAoBC,cAApB,CAAmC;AAAEC,QAAAA,MAAM,EAAEH,YAAV;AAAwBI,QAAAA,QAAQ,EAARA;AAAxB,OAAnC;AACH;;;WAmBD,uBAAcd,KAAd,EAAqB;AACjB,mCAAgD,KAAKb,KAArD,CAAQW,eAAR;AAAA,UAAQA,eAAR,uCAA0Bd,iBAA1B;AACA,UAAMoB,UAAU,GAAG,KAAKF,KAAL,CAAWC,QAAX,CAAoBC,UAApB,CAA+BJ,KAA/B,IAAwCF,eAA3D;AACA,aAAOM,UAAP;AACH;;;WAID,qBAAYwD,GAAZ,EAAgD;AAAA;;AAAA,UAA/BI,qBAA+B,uEAAP,KAAO;;AAC5C,UAAIJ,GAAG,CAACL,QAAJ,CAAa,SAAb,MAA4B,KAAKrD,KAAL,CAAWoB,YAAX,CAAwBiC,QAAxB,CAAiC,SAAjC,CAAhC,EAA6E;AACzE;AACH;;AACD,WAAKb,QAAL,CAAc;AAAEpB,QAAAA,YAAY,EAAEsC,GAAG,CAACrD,KAAJ;AAAhB,OAAd,EAA6C,YAAM;AAC/C,QAAA,MAAI,CAACd,aAAL,CAAmB,MAAI,CAACS,KAAL,CAAWoB,YAA9B;;AACA,YAAI,CAAC0C,qBAAL,EAA4B;AACxB,cAAMC,QAAQ,GAAG,MAAI,CAAC/D,KAAL,CAAWoB,YAAX,CAAwBf,KAAxB,EAAjB;;AACA,+BAAO,MAAI,CAACpB,KAAZ,EAAmB,eAAnB,EAAoC,4BAAY8E,QAAZ,CAApC;AACA,+BAAO,MAAI,CAAC9E,KAAZ,EAAmB,uBAAnB,EAA4C,CAAC,4BAAY8E,QAAZ,CAAD,CAA5C;AACH;AACJ,OAPD;AAQH;;;WAwCD,8BAAqB;AACjB,yBAAkD,KAAK9E,KAAvD;AAAA,UAAQ+E,YAAR,gBAAQA,YAAR;AAAA,UAAsBvE,UAAtB,gBAAsBA,UAAtB;AAAA,UAAkCwE,WAAlC,gBAAkCA,WAAlC;AACA,UAAMC,eAAe,GAAGF,YAAY,IAAIvE,UAAxC;AACA,UAAM0E,WAAW,GAAG,6CAAsBC,cAAtB,EAAsC,KAAKnF,KAA3C,CAApB;;AACA,UAAIiF,eAAJ,EAAqB;AACjB,eAAQ,6BAAC,cAAD,6BAAoBC,WAApB;AAAiC,UAAA,MAAM,EAAEE,sBAAzC;AAAwD,UAAA,KAAK,EAAE,CAAC,KAAKtB,KAAL,CAAWiB,YAAZ,EAA0BC,WAA1B,CAA/D;AAAuG,UAAA,KAAK,EAAE,KAAKjE,KAAL,CAAWoB,YAAzH;AAAuI,UAAA,QAAQ,EAAE,KAAKH,QAAtJ;AAAgK,UAAA,2BAA2B,EAAE,IAA7L;AACP,UAAA,yBAAyB,EAAE,qBADpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAR;AAGH;AACJ;;;WACD,kBAAS;AACL,yBAAuF,KAAKhC,KAA5F;AAAA,UAAQ8D,KAAR,gBAAQA,KAAR;AAAA,UAAenD,eAAf,gBAAeA,eAAf;AAAA,UAAgCsD,iBAAhC,gBAAgCA,iBAAhC;AAAA,UAAmDzD,UAAnD,gBAAmDA,UAAnD;AAAA,UAA+D6E,mBAA/D,gBAA+DA,mBAA/D;AACA,aAAQ,6BAAC,iBAAD;AAAM,QAAA,KAAK,EAAE,KAAKvB,KAAL,CAAWwB,iBAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACR,6BAAC,qBAAD;AAAU,QAAA,GAAG,EAAE,KAAKrF,IAApB;AAA0B,QAAA,KAAK,EAAE,CAAC,KAAK6D,KAAL,CAAWyB,SAAZ,EAAuBzB,KAAvB,CAAjC;AAEA,QAAA,eAAe,EAAEnD,eAAe,GAAGsD,iBAAlB,GAAsC,CAFvD;AAGC,QAAA,IAAI,EAAE,KAAKlD,KAAL,CAAW8B,IAHlB;AAGwB,QAAA,UAAU,EAAE,KAAKW,UAHzC;AAGqD,QAAA,aAAa,EAAE,KAAK5B,aAHzE;AAGwF,QAAA,sBAAsB,EAAE,KAAKS,sBAHrH;AAG6I,QAAA,iBAAiB,EAAE,KAAKjC,iBAHrK;AAGwL,QAAA,kBAAkB,EAAE,KAAKW,KAAL,CAAWC,QAAX,GAAsB,KAAKwE,aAAL,CAAmB,KAAKzE,KAAL,CAAWC,QAA9B,CAAtB,GAAgE6C,SAH5Q;AAGuR,QAAA,4BAA4B,EAAEwB,mBAHrT;AAG0U,QAAA,8BAA8B,EAAE7E,UAAU,IAAI6E,mBAHxX;AAG6Y,QAAA,MAAM,EAAE,KAAKrF,KAAL,CAAW2D,MAHha;AAGwa,QAAA,QAAQ,EAAE,KAAK3D,KAAL,CAAWyF,QAH7b;AAGuc,QAAA,qBAAqB,EAAE,KAAKzF,KAAL,CAAW0F,qBAHze;AAGggB,QAAA,aAAa,EAAE,KAAK1F,KAAL,CAAW2F,aAH1hB;AAGyiB,QAAA,aAAa,EAAE,KAAK3F,KAAL,CAAW4F,aAHnkB;AAGklB,QAAA,YAAY,EAAE,KAAK5F,KAAL,CAAW6F,YAH3mB;AAGynB,QAAA,UAAU,EAAE,KAAK7F,KAAL,CAAWQ,UAHhpB;AAG4pB,QAAA,yBAAyB,EAAE,KAAKR,KAAL,CAAW8F,yBAHlsB;AAG6tB,QAAA,YAAY,EAAE,KAAK9F,KAAL,CAAW+F,YAHtvB;AAGowB,QAAA,qBAAqB,EAAE,KAAK/F,KAAL,CAAWgG,qBAHtyB;AAG6zB,QAAA,YAAY,EAAE,KAAKhG,KAAL,CAAWiG,YAHt1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADQ,EAKP,KAAKC,kBAAL,EALO,CAAR;AAOH;;;WAnID,kCAAgCrE,CAAhC,EAAmCsE,SAAnC,EAA8C;AAC1C,UAAMC,QAAQ,GAAGD,SAAS,CAACtD,IAA3B;AACA,UAAMwD,OAAO,GAAG,EAAhB;;AACA,WAAK,IAAI5D,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG2D,QAAQ,CAACrE,MAA7B,EAAqCU,CAAC,EAAtC,EAA0C;AACtC,YAAIO,GAAG,GAAGmD,SAAS,CAAChD,KAAV,CAAgBV,CAAhB,CAAV;;AAEA,YAAI2D,QAAQ,CAAC3D,CAAD,CAAR,CAAYS,OAAhB,EAAyB;AACrBF,UAAAA,GAAG,GAAGoD,QAAQ,CAAC3D,CAAD,CAAR,CAAYrB,KAAZ,EAAN;AAEA4B,UAAAA,GAAG,CAACsD,QAAJ,GAAeF,QAAQ,CAAC3D,CAAD,CAAR,CAAY6D,QAAZ,GAAuBF,QAAQ,CAAC3D,CAAD,CAAR,CAAY6D,QAAZ,GAAuB,CAA9C,GAAkD,CAAjE;AACH;;AACDD,QAAAA,OAAO,CAACjD,IAAR,CAAaJ,GAAb;AACH;;AACD,aAAO;AAAEH,QAAAA,IAAI,EAAEwD;AAAR,OAAP;AACH;;;EAzGsBE,gB;;AAArBxG,Y,CACKyG,W,GAAc,c;AADnBzG,Y,CAEK0G,S,8BACAC,kBAASD,S;AAEZ9F,EAAAA,eAAe,EAAEgG,mBAAUC,M;AAE3B3C,EAAAA,iBAAiB,EAAE0C,mBAAUC,M;AAE7BlG,EAAAA,aAAa,EAAEiG,mBAAUC,M;AAEzBnG,EAAAA,cAAc,EAAEkG,mBAAUC,M;AAE1BlD,EAAAA,aAAa,EAAEiD,mBAAUE,SAAV,CAAoB,CAACF,mBAAUG,MAAX,EAAmBH,mBAAUC,MAA7B,EAAqCD,mBAAUI,KAA/C,CAApB,C;AAEfhC,EAAAA,YAAY,EAAE4B,mBAAUK,I;AAExB3B,EAAAA,mBAAmB,EAAEsB,mBAAUK,I;AAE/BpG,EAAAA,aAAa,EAAE+F,mBAAUK,I;AAEzBpB,EAAAA,aAAa,EAAEe,mBAAUK,I;AAEzBnB,EAAAA,YAAY,EAAEc,mBAAUK,I;AAExBrB,EAAAA,aAAa,EAAEgB,mBAAUK,I;AAEzBxG,EAAAA,UAAU,EAAEmG,mBAAUK,I;AAEtBlB,EAAAA,yBAAyB,EAAEa,mBAAUM,KAAV,CAAgB,CAAC,OAAD,EAAU,QAAV,EAAoB,SAApB,CAAhB,C;AAE3BlB,EAAAA,YAAY,EAAEY,mBAAUO,I;AAExBlB,EAAAA,qBAAqB,EAAEW,mBAAUC,M;AAEjCX,EAAAA,YAAY,EAAEU,mBAAUO;;AAnC1BnH,Y,CAqCKoH,Y,GAAe;AAClBzG,EAAAA,aAAa,EAAEf,cADG;AAElBc,EAAAA,cAAc,EAAEb,eAFE;AAGlBe,EAAAA,eAAe,EAAEd,iBAHC;AAIlBoE,EAAAA,iBAAiB,EAAEnE,mBAJD;AAKlBuF,EAAAA,mBAAmB,EAAE,KALH;AAMlB7E,EAAAA,UAAU,EAAE,KANM;AAOlBqF,EAAAA,YAAY,EAAE,KAPI;AAQlBD,EAAAA,aAAa,EAAE,IARG;AASlBF,EAAAA,qBAAqB,EAAE0B,sBAASC,EAAT,KAAgB,SATrB;AAUlBtB,EAAAA,YAAY,EAAE,sBAAClE,CAAD,EAAIC,KAAJ;AAAA,WAAcwF,MAAM,CAACxF,KAAD,CAApB;AAAA;AAVI,C;eA2LX/B,Y","sourcesContent":["import invoke from 'lodash/invoke';\nimport PropTypes from 'prop-types';\nimport XDate from 'xdate';\nimport React, { Component } from 'react';\nimport { FlatList, Platform, Dimensions, View } from 'react-native';\nimport { extractComponentProps } from '../componentUpdater';\nimport { xdateToData, parseDate } from '../interface';\nimport { page, sameDate } from '../dateutils';\n// @ts-expect-error\nimport { STATIC_HEADER } from '../testIDs';\nimport styleConstructor from './style';\nimport Calendar from '../calendar';\nimport CalendarListItem from './item';\nimport CalendarHeader from '../calendar/header/index';\nconst { width } = Dimensions.get('window');\nconst CALENDAR_WIDTH = width;\nconst CALENDAR_HEIGHT = 360;\nconst PAST_SCROLL_RANGE = 50;\nconst FUTURE_SCROLL_RANGE = 50;\n/**\n * @description: Calendar List component for both vertical and horizontal calendars\n * @extends: Calendar\n * @extendslink: docs/Calendar\n * @example: https://github.com/wix/react-native-calendars/blob/master/example/src/screens/calendarsList.js\n * @gif: https://github.com/wix/react-native-calendars/blob/master/demo/calendar-list.gif\n */\nclass CalendarList extends Component {\n    static displayName = 'CalendarList';\n    static propTypes = {\n        ...Calendar.propTypes,\n        /** Max amount of months allowed to scroll to the past. Default = 50 */\n        pastScrollRange: PropTypes.number,\n        /** Max amount of months allowed to scroll to the future. Default = 50 */\n        futureScrollRange: PropTypes.number,\n        /** Used when calendar scroll is horizontal, default is device width, pagination should be disabled */\n        calendarWidth: PropTypes.number,\n        /** Dynamic calendar height */\n        calendarHeight: PropTypes.number,\n        /** Style for the List item (the calendar) */\n        calendarStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number, PropTypes.array]),\n        /** Whether to use static header that will not scroll with the list (horizontal only) */\n        staticHeader: PropTypes.bool,\n        /** Enable or disable vertical / horizontal scroll indicator. Default = false */\n        showScrollIndicator: PropTypes.bool,\n        /** Whether to animate the auto month scroll */\n        animateScroll: PropTypes.bool,\n        /** Enable or disable scrolling of calendar list */\n        scrollEnabled: PropTypes.bool,\n        /** When true, the calendar list scrolls to top when the status bar is tapped. Default = true */\n        scrollsToTop: PropTypes.bool,\n        /** Enable or disable paging on scroll */\n        pagingEnabled: PropTypes.bool,\n        /** Whether the scroll is horizontal */\n        horizontal: PropTypes.bool,\n        /** Should Keyboard persist taps */\n        keyboardShouldPersistTaps: PropTypes.oneOf(['never', 'always', 'handled']),\n        /** A custom key extractor for the generated calendar months */\n        keyExtractor: PropTypes.func,\n        /** How far from the end to trigger the onEndReached callback */\n        onEndReachedThreshold: PropTypes.number,\n        /** Called once when the scroll position gets within onEndReachedThreshold */\n        onEndReached: PropTypes.func\n    };\n    static defaultProps = {\n        calendarWidth: CALENDAR_WIDTH,\n        calendarHeight: CALENDAR_HEIGHT,\n        pastScrollRange: PAST_SCROLL_RANGE,\n        futureScrollRange: FUTURE_SCROLL_RANGE,\n        showScrollIndicator: false,\n        horizontal: false,\n        scrollsToTop: false,\n        scrollEnabled: true,\n        removeClippedSubviews: Platform.OS === 'android',\n        keyExtractor: (_, index) => String(index)\n    };\n    style;\n    list = React.createRef();\n    viewabilityConfig = {\n        itemVisiblePercentThreshold: 20\n    };\n    constructor(props) {\n        super(props);\n        this.style = styleConstructor(props.theme);\n        const rows = [];\n        const texts = [];\n        const date = parseDate(props.current) || new XDate();\n        const { pastScrollRange = PAST_SCROLL_RANGE, futureScrollRange = FUTURE_SCROLL_RANGE } = props;\n        for (let i = 0; i <= pastScrollRange + futureScrollRange; i++) {\n            const rangeDate = date.clone().addMonths(i - pastScrollRange, true);\n            const rangeDateStr = rangeDate.toString('MMM yyyy');\n            texts.push(rangeDateStr);\n            /*\n             * This selects range around current shown month [-0, +2] or [-1, +1] month for detail calendar rendering.\n             * If `this.pastScrollRange` is `undefined` it's equal to `false` or 0 in next condition.\n             */\n            if ((pastScrollRange - 1 <= i && i <= pastScrollRange + 1) ||\n                (!pastScrollRange && i <= pastScrollRange + 2)) {\n                rows.push(rangeDate);\n            }\n            else {\n                rows.push(rangeDateStr);\n            }\n        }\n        this.state = {\n            rows,\n            texts,\n            openDate: date,\n            currentMonth: parseDate(props.current)\n        };\n    }\n    componentDidUpdate(prevProps) {\n        const prevCurrent = parseDate(prevProps.current);\n        const current = parseDate(this.props.current);\n        if (current && prevCurrent && current.getTime() !== prevCurrent.getTime()) {\n            this.scrollToMonth(current);\n        }\n    }\n    static getDerivedStateFromProps(_, prevState) {\n        const rowClone = prevState.rows;\n        const newRows = [];\n        for (let i = 0; i < rowClone.length; i++) {\n            let val = prevState.texts[i];\n            // @ts-expect-error\n            if (rowClone[i].getTime) {\n                val = rowClone[i].clone();\n                // @ts-expect-error\n                val.propBump = rowClone[i].propBump ? rowClone[i].propBump + 1 : 1;\n            }\n            newRows.push(val);\n        }\n        return { rows: newRows };\n    }\n    scrollToDay(d, offset, animated) {\n        const { horizontal, calendarHeight = CALENDAR_HEIGHT, calendarWidth = CALENDAR_WIDTH, pastScrollRange = PAST_SCROLL_RANGE, firstDay } = this.props;\n        const day = parseDate(d);\n        const diffMonths = Math.round(this.state.openDate.clone().setDate(1).diffMonths(day.clone().setDate(1)));\n        const size = horizontal ? calendarWidth : calendarHeight;\n        let scrollAmount = size * pastScrollRange + diffMonths * size + (offset || 0);\n        if (!horizontal) {\n            let week = 0;\n            const days = page(day, firstDay);\n            for (let i = 0; i < days.length; i++) {\n                week = Math.floor(i / 7);\n                if (sameDate(days[i], day)) {\n                    scrollAmount += 46 * week;\n                    break;\n                }\n            }\n        }\n        this.list?.current?.scrollToOffset({ offset: scrollAmount, animated });\n    }\n    scrollToMonth = (m) => {\n        const { horizontal, calendarHeight = CALENDAR_HEIGHT, calendarWidth = CALENDAR_WIDTH, pastScrollRange = PAST_SCROLL_RANGE, animateScroll = false } = this.props;\n        const month = parseDate(m);\n        const scrollTo = month || this.state.openDate;\n        const diffMonths = Math.round(this.state.openDate.clone().setDate(1).diffMonths(scrollTo.clone().setDate(1)));\n        const size = horizontal ? calendarWidth : calendarHeight;\n        const scrollAmount = size * pastScrollRange + diffMonths * size;\n        this.list?.current?.scrollToOffset({ offset: scrollAmount, animated: animateScroll });\n    };\n    getItemLayout = (_, index) => {\n        const { horizontal, calendarHeight = CALENDAR_HEIGHT, calendarWidth = CALENDAR_WIDTH } = this.props;\n        const size = horizontal ? calendarWidth : calendarHeight;\n        return {\n            length: size,\n            offset: size * index,\n            index\n        };\n    };\n    getMonthIndex(month) {\n        const { pastScrollRange = PAST_SCROLL_RANGE } = this.props;\n        const diffMonths = this.state.openDate.diffMonths(month) + pastScrollRange;\n        return diffMonths;\n    }\n    addMonth = (count) => {\n        this.updateMonth(this.state.currentMonth.clone().addMonths(count, true));\n    };\n    updateMonth(day, doNotTriggerListeners = false) {\n        if (day.toString('yyyy MM') === this.state.currentMonth.toString('yyyy MM')) {\n            return;\n        }\n        this.setState({ currentMonth: day.clone() }, () => {\n            this.scrollToMonth(this.state.currentMonth);\n            if (!doNotTriggerListeners) {\n                const currMont = this.state.currentMonth.clone();\n                invoke(this.props, 'onMonthChange', xdateToData(currMont));\n                invoke(this.props, 'onVisibleMonthsChange', [xdateToData(currMont)]);\n            }\n        });\n    }\n    onViewableItemsChanged = ({ viewableItems }) => {\n        function rowIsCloseToViewable(index, distance) {\n            for (let i = 0; i < viewableItems.length; i++) {\n                if (Math.abs(index - parseInt(viewableItems[i].index)) <= distance) {\n                    return true;\n                }\n            }\n            return false;\n        }\n        const rowclone = this.state.rows;\n        const newrows = [];\n        const visibleMonths = [];\n        for (let i = 0; i < rowclone.length; i++) {\n            let val = rowclone[i];\n            const rowShouldBeRendered = rowIsCloseToViewable(i, 1);\n            const { pastScrollRange = PAST_SCROLL_RANGE } = this.props;\n            if (rowShouldBeRendered && !rowclone[i].getTime) {\n                val = this.state.openDate.clone().addMonths(i - pastScrollRange, true);\n            }\n            else if (!rowShouldBeRendered) {\n                val = this.state.texts[i];\n            }\n            newrows.push(val);\n            if (rowIsCloseToViewable(i, 0)) {\n                const v = (val instanceof XDate) ? val : new XDate(val);\n                visibleMonths.push(xdateToData(v));\n            }\n        }\n        invoke(this.props, 'onVisibleMonthsChange', visibleMonths);\n        this.setState({\n            // @ts-expect-error\n            rows: newrows,\n            currentMonth: parseDate(visibleMonths[0])\n        });\n    };\n    renderItem = ({ item }) => {\n        const { calendarStyle, horizontal, calendarWidth, testID, ...others } = this.props;\n        return (<CalendarListItem {...others} item={item} testID={`${testID}_${item}`} style={calendarStyle} horizontal={horizontal} calendarWidth={horizontal ? calendarWidth : undefined} scrollToMonth={this.scrollToMonth}/>);\n    };\n    renderStaticHeader() {\n        const { staticHeader, horizontal, headerStyle } = this.props;\n        const useStaticHeader = staticHeader && horizontal;\n        const headerProps = extractComponentProps(CalendarHeader, this.props);\n        if (useStaticHeader) {\n            return (<CalendarHeader {...headerProps} testID={STATIC_HEADER} style={[this.style.staticHeader, headerStyle]} month={this.state.currentMonth} addMonth={this.addMonth} accessibilityElementsHidden={true} // iOS\n             importantForAccessibility={'no-hide-descendants'} // Android\n            />);\n        }\n    }\n    render() {\n        const { style, pastScrollRange, futureScrollRange, horizontal, showScrollIndicator } = this.props;\n        return (<View style={this.style.flatListContainer}>\n        <FlatList ref={this.list} style={[this.style.container, style]} \n        // @ts-expect-error\n        initialListSize={pastScrollRange + futureScrollRange + 1} // ListView deprecated\n         data={this.state.rows} renderItem={this.renderItem} getItemLayout={this.getItemLayout} onViewableItemsChanged={this.onViewableItemsChanged} viewabilityConfig={this.viewabilityConfig} initialScrollIndex={this.state.openDate ? this.getMonthIndex(this.state.openDate) : undefined} showsVerticalScrollIndicator={showScrollIndicator} showsHorizontalScrollIndicator={horizontal && showScrollIndicator} testID={this.props.testID} onLayout={this.props.onLayout} removeClippedSubviews={this.props.removeClippedSubviews} pagingEnabled={this.props.pagingEnabled} scrollEnabled={this.props.scrollEnabled} scrollsToTop={this.props.scrollsToTop} horizontal={this.props.horizontal} keyboardShouldPersistTaps={this.props.keyboardShouldPersistTaps} keyExtractor={this.props.keyExtractor} onEndReachedThreshold={this.props.onEndReachedThreshold} onEndReached={this.props.onEndReached}/>\n        {this.renderStaticHeader()}\n      </View>);\n    }\n}\nexport default CalendarList;\n"]},"metadata":{},"sourceType":"script"}