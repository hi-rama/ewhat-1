{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _invoke = _interopRequireDefault(require(\"lodash/invoke\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _xdate = _interopRequireDefault(require(\"xdate\"));\n\nvar _memoizeOne = _interopRequireDefault(require(\"memoize-one\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _reactNativeSwipeGestures = _interopRequireWildcard(require(\"react-native-swipe-gestures\"));\n\nvar _dateutils = require(\"../dateutils\");\n\nvar _interface = require(\"../interface\");\n\nvar _dayStateManager = require(\"../day-state-manager\");\n\nvar _componentUpdater = require(\"../componentUpdater\");\n\nvar _testIDs = require(\"../testIDs\");\n\nvar _style = _interopRequireDefault(require(\"./style\"));\n\nvar _header = _interopRequireDefault(require(\"./header\"));\n\nvar _index = _interopRequireDefault(require(\"./day/index\"));\n\nvar _basic = _interopRequireDefault(require(\"./day/basic\"));\n\nvar _jsxFileName = \"D:\\\\merge\\\\please-attendence\\\\node_modules\\\\react-native-calendars\\\\src\\\\calendar\\\\index.js\";\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar Calendar = function (_Component) {\n  (0, _inherits2.default)(Calendar, _Component);\n\n  var _super = _createSuper(Calendar);\n\n  function Calendar() {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, Calendar);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      currentMonth: _this.props.current ? (0, _interface.parseDate)(_this.props.current) : new _xdate.default()\n    };\n    _this.style = (0, _style.default)(_this.props.theme);\n    _this.header = _react.default.createRef();\n\n    _this.addMonth = function (count) {\n      _this.updateMonth(_this.state.currentMonth.clone().addMonths(count, true));\n    };\n\n    _this.updateMonth = function (day) {\n      var doNotTriggerListeners = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      if (day.toString('yyyy MM') === _this.state.currentMonth.toString('yyyy MM')) {\n        return;\n      }\n\n      _this.setState({\n        currentMonth: day.clone()\n      }, function () {\n        if (!doNotTriggerListeners) {\n          var currMont = _this.state.currentMonth.clone();\n\n          (0, _invoke.default)(_this.props, 'onMonthChange', (0, _interface.xdateToData)(currMont));\n          (0, _invoke.default)(_this.props, 'onVisibleMonthsChange', [(0, _interface.xdateToData)(currMont)]);\n        }\n      });\n    };\n\n    _this.pressDay = function (date) {\n      _this.handleDayInteraction(date, _this.props.onDayPress);\n    };\n\n    _this.longPressDay = function (date) {\n      _this.handleDayInteraction(date, _this.props.onDayLongPress);\n    };\n\n    _this.swipeProps = {\n      onSwipe: function onSwipe(direction) {\n        return _this.onSwipe(direction);\n      }\n    };\n\n    _this.onSwipe = function (gestureName) {\n      var SWIPE_UP = _reactNativeSwipeGestures.swipeDirections.SWIPE_UP,\n          SWIPE_DOWN = _reactNativeSwipeGestures.swipeDirections.SWIPE_DOWN,\n          SWIPE_LEFT = _reactNativeSwipeGestures.swipeDirections.SWIPE_LEFT,\n          SWIPE_RIGHT = _reactNativeSwipeGestures.swipeDirections.SWIPE_RIGHT;\n\n      switch (gestureName) {\n        case SWIPE_UP:\n        case SWIPE_DOWN:\n          break;\n\n        case SWIPE_LEFT:\n          _this.onSwipeLeft();\n\n          break;\n\n        case SWIPE_RIGHT:\n          _this.onSwipeRight();\n\n          break;\n      }\n    };\n\n    _this.onSwipeLeft = function () {\n      var _this$header, _this$header$current;\n\n      (_this$header = _this.header) == null ? void 0 : (_this$header$current = _this$header.current) == null ? void 0 : _this$header$current.onPressRight();\n    };\n\n    _this.onSwipeRight = function () {\n      var _this$header2, _this$header2$current;\n\n      (_this$header2 = _this.header) == null ? void 0 : (_this$header2$current = _this$header2.current) == null ? void 0 : _this$header2$current.onPressLeft();\n    };\n\n    _this.renderWeekNumber = (0, _memoizeOne.default)(function (weekNumber) {\n      return _react.default.createElement(_reactNative.View, {\n        style: _this.style.dayContainer,\n        key: \"week-container-\" + weekNumber,\n        __self: (0, _assertThisInitialized2.default)(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 17\n        }\n      }, _react.default.createElement(_basic.default, {\n        key: \"week-\" + weekNumber,\n        marking: {\n          disabled: true,\n          disableTouchEvent: true\n        },\n        theme: _this.props.theme,\n        testID: _testIDs.WEEK_NUMBER + \"-\" + weekNumber,\n        __self: (0, _assertThisInitialized2.default)(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 9\n        }\n      }, weekNumber));\n    });\n    return _this;\n  }\n\n  (0, _createClass2.default)(Calendar, [{\n    key: \"handleDayInteraction\",\n    value: function handleDayInteraction(date, interaction) {\n      var _this$props = this.props,\n          disableMonthChange = _this$props.disableMonthChange,\n          allowSelectionOutOfRange = _this$props.allowSelectionOutOfRange;\n      var day = (0, _interface.parseDate)(date);\n      var minDate = (0, _interface.parseDate)(this.props.minDate);\n      var maxDate = (0, _interface.parseDate)(this.props.maxDate);\n\n      if (allowSelectionOutOfRange || !(minDate && !(0, _dateutils.isGTE)(day, minDate)) && !(maxDate && !(0, _dateutils.isLTE)(day, maxDate))) {\n        var shouldUpdateMonth = disableMonthChange === undefined || !disableMonthChange;\n\n        if (shouldUpdateMonth) {\n          this.updateMonth(day);\n        }\n\n        if (interaction) {\n          interaction((0, _interface.xdateToData)(day));\n        }\n      }\n    }\n  }, {\n    key: \"renderDay\",\n    value: function renderDay(day, id) {\n      var _this$props2 = this.props,\n          hideExtraDays = _this$props2.hideExtraDays,\n          markedDates = _this$props2.markedDates;\n      var dayProps = (0, _componentUpdater.extractComponentProps)(_index.default, this.props);\n\n      if (!(0, _dateutils.sameMonth)(new _xdate.default(day), this.state.currentMonth) && hideExtraDays) {\n        return _react.default.createElement(_reactNative.View, {\n          key: id,\n          style: this.style.emptyDayContainer,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 20\n          }\n        });\n      }\n\n      return _react.default.createElement(_reactNative.View, {\n        style: this.style.dayContainer,\n        key: id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 17\n        }\n      }, _react.default.createElement(_index.default, (0, _extends2.default)({}, dayProps, {\n        day: day,\n        state: (0, _dayStateManager.getState)(new _xdate.default(day), this.state.currentMonth, this.props),\n        marking: markedDates == null ? void 0 : markedDates[(0, _interface.toMarkingFormat)(new _xdate.default(day))],\n        onPress: this.pressDay,\n        onLongPress: this.longPressDay,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 9\n        }\n      })));\n    }\n  }, {\n    key: \"renderWeek\",\n    value: function renderWeek(days, id) {\n      var _this2 = this;\n\n      var week = [];\n      days.forEach(function (day, id2) {\n        week.push(_this2.renderDay(day, id2));\n      }, this);\n\n      if (this.props.showWeekNumbers) {\n        week.unshift(this.renderWeekNumber(days[days.length - 1].getWeek()));\n      }\n\n      return _react.default.createElement(_reactNative.View, {\n        style: this.style.week,\n        key: id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 17\n        }\n      }, week);\n    }\n  }, {\n    key: \"renderMonth\",\n    value: function renderMonth() {\n      var currentMonth = this.state.currentMonth;\n      var _this$props3 = this.props,\n          firstDay = _this$props3.firstDay,\n          showSixWeeks = _this$props3.showSixWeeks,\n          hideExtraDays = _this$props3.hideExtraDays;\n      var shouldShowSixWeeks = showSixWeeks && !hideExtraDays;\n      var days = (0, _dateutils.page)(currentMonth, firstDay, shouldShowSixWeeks);\n      var weeks = [];\n\n      while (days.length) {\n        weeks.push(this.renderWeek(days.splice(0, 7), weeks.length));\n      }\n\n      return _react.default.createElement(_reactNative.View, {\n        style: this.style.monthView,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 16\n        }\n      }, weeks);\n    }\n  }, {\n    key: \"renderHeader\",\n    value: function renderHeader() {\n      var _this$props4 = this.props,\n          customHeader = _this$props4.customHeader,\n          headerStyle = _this$props4.headerStyle,\n          displayLoadingIndicator = _this$props4.displayLoadingIndicator,\n          markedDates = _this$props4.markedDates,\n          testID = _this$props4.testID;\n      var current = (0, _interface.parseDate)(this.props.current);\n      var indicator;\n\n      if (current) {\n        var lastMonthOfDay = (0, _interface.toMarkingFormat)(current.clone().addMonths(1, true).setDate(1).addDays(-1));\n\n        if (displayLoadingIndicator && !(markedDates != null && markedDates[lastMonthOfDay])) {\n          indicator = true;\n        }\n      }\n\n      var headerProps = (0, _componentUpdater.extractComponentProps)(_header.default, this.props);\n      var CustomHeader = customHeader;\n      var HeaderComponent = customHeader ? CustomHeader : _header.default;\n      var ref = customHeader ? undefined : this.header;\n      return _react.default.createElement(HeaderComponent, (0, _extends2.default)({}, headerProps, {\n        testID: testID,\n        style: headerStyle,\n        ref: ref,\n        month: this.state.currentMonth,\n        addMonth: this.addMonth,\n        displayLoadingIndicator: indicator,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 17\n        }\n      }));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props5 = this.props,\n          enableSwipeMonths = _this$props5.enableSwipeMonths,\n          style = _this$props5.style;\n      var GestureComponent = enableSwipeMonths ? _reactNativeSwipeGestures.default : _reactNative.View;\n      var gestureProps = enableSwipeMonths ? this.swipeProps : undefined;\n      return _react.default.createElement(GestureComponent, (0, _extends2.default)({}, gestureProps, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 17\n        }\n      }), _react.default.createElement(_reactNative.View, {\n        style: [this.style.container, style],\n        accessibilityElementsHidden: this.props.accessibilityElementsHidden,\n        importantForAccessibility: this.props.importantForAccessibility,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 9\n        }\n      }, this.renderHeader(), this.renderMonth()));\n    }\n  }]);\n  return Calendar;\n}(_react.Component);\n\nCalendar.displayName = 'Calendar';\nCalendar.propTypes = (0, _extends2.default)({}, _header.default.propTypes, _index.default.propTypes, {\n  theme: _propTypes.default.object,\n  style: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.array, _propTypes.default.number]),\n  current: _propTypes.default.any,\n  minDate: _propTypes.default.any,\n  maxDate: _propTypes.default.any,\n  firstDay: _propTypes.default.number,\n  markedDates: _propTypes.default.object,\n  displayLoadingIndicator: _propTypes.default.bool,\n  showWeekNumbers: _propTypes.default.bool,\n  hideExtraDays: _propTypes.default.bool,\n  showSixWeeks: _propTypes.default.bool,\n  onDayPress: _propTypes.default.func,\n  onDayLongPress: _propTypes.default.func,\n  onMonthChange: _propTypes.default.func,\n  onVisibleMonthsChange: _propTypes.default.func,\n  disableMonthChange: _propTypes.default.bool,\n  enableSwipeMonths: _propTypes.default.bool,\n  disabledByDefault: _propTypes.default.bool,\n  headerStyle: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.number, _propTypes.default.array]),\n  customHeader: _propTypes.default.any,\n  allowSelectionOutOfRange: _propTypes.default.bool\n});\nCalendar.defaultProps = {\n  enableSwipeMonths: false\n};\nvar _default = Calendar;\nexports.default = _default;","map":{"version":3,"sources":["D:/merge/please-attendence/node_modules/react-native-calendars/src/calendar/index.js"],"names":["Calendar","state","currentMonth","props","current","XDate","style","theme","header","React","createRef","addMonth","count","updateMonth","clone","addMonths","day","doNotTriggerListeners","toString","setState","currMont","pressDay","date","handleDayInteraction","onDayPress","longPressDay","onDayLongPress","swipeProps","onSwipe","direction","gestureName","SWIPE_UP","swipeDirections","SWIPE_DOWN","SWIPE_LEFT","SWIPE_RIGHT","onSwipeLeft","onSwipeRight","onPressRight","onPressLeft","renderWeekNumber","weekNumber","dayContainer","disabled","disableTouchEvent","WEEK_NUMBER","interaction","disableMonthChange","allowSelectionOutOfRange","minDate","maxDate","shouldUpdateMonth","undefined","id","hideExtraDays","markedDates","dayProps","Day","emptyDayContainer","days","week","forEach","id2","push","renderDay","showWeekNumbers","unshift","length","getWeek","firstDay","showSixWeeks","shouldShowSixWeeks","weeks","renderWeek","splice","monthView","customHeader","headerStyle","displayLoadingIndicator","testID","indicator","lastMonthOfDay","setDate","addDays","headerProps","CalendarHeader","CustomHeader","HeaderComponent","ref","enableSwipeMonths","GestureComponent","GestureRecognizer","View","gestureProps","container","accessibilityElementsHidden","importantForAccessibility","renderHeader","renderMonth","Component","displayName","propTypes","PropTypes","object","oneOfType","array","number","any","bool","func","onMonthChange","onVisibleMonthsChange","disabledByDefault","defaultProps"],"mappings":"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","sourcesContent":["import invoke from 'lodash/invoke';\nimport PropTypes from 'prop-types';\nimport XDate from 'xdate';\nimport memoize from 'memoize-one';\nimport React, { Component } from 'react';\nimport { View } from 'react-native';\n// @ts-expect-error\nimport GestureRecognizer, { swipeDirections } from 'react-native-swipe-gestures';\nimport { page, isGTE, isLTE, sameMonth } from '../dateutils';\nimport { xdateToData, parseDate, toMarkingFormat } from '../interface';\nimport { getState } from '../day-state-manager';\nimport { extractComponentProps } from '../componentUpdater';\n// @ts-expect-error\nimport { WEEK_NUMBER } from '../testIDs';\nimport styleConstructor from './style';\nimport CalendarHeader from './header';\nimport Day from './day/index';\nimport BasicDay from './day/basic';\n/**\n * @description: Calendar component\n * @example: https://github.com/wix/react-native-calendars/blob/master/example/src/screens/calendars.js\n * @gif: https://github.com/wix/react-native-calendars/blob/master/demo/calendar.gif\n */\nclass Calendar extends Component {\n    static displayName = 'Calendar';\n    static propTypes = {\n        ...CalendarHeader.propTypes,\n        ...Day.propTypes,\n        /** Specify theme properties to override specific styles for calendar parts. Default = {} */\n        theme: PropTypes.object,\n        /** Specify style for calendar container element. Default = {} */\n        style: PropTypes.oneOfType([PropTypes.object, PropTypes.array, PropTypes.number]),\n        /** Initially visible month. Default = Date() */\n        current: PropTypes.any,\n        /** Minimum date that can be selected, dates before minDate will be grayed out. Default = undefined */\n        minDate: PropTypes.any,\n        /** Maximum date that can be selected, dates after maxDate will be grayed out. Default = undefined */\n        maxDate: PropTypes.any,\n        /** If firstDay=1 week starts from Monday. Note that dayNames and dayNamesShort should still start from Sunday. */\n        firstDay: PropTypes.number,\n        /** Collection of dates that have to be marked. Default = {} */\n        markedDates: PropTypes.object,\n        /** Display loading indicator. Default = false */\n        displayLoadingIndicator: PropTypes.bool,\n        /** Show week numbers. Default = false */\n        showWeekNumbers: PropTypes.bool,\n        /** Do not show days of other months in month page. Default = false */\n        hideExtraDays: PropTypes.bool,\n        /** Always show six weeks on each month (only when hideExtraDays = false). Default = false */\n        showSixWeeks: PropTypes.bool,\n        /** Handler which gets executed on day press. Default = undefined */\n        onDayPress: PropTypes.func,\n        /** Handler which gets executed on day long press. Default = undefined */\n        onDayLongPress: PropTypes.func,\n        /** Handler which gets executed when month changes in calendar. Default = undefined */\n        onMonthChange: PropTypes.func,\n        /** Handler which gets executed when visible month changes in calendar. Default = undefined */\n        onVisibleMonthsChange: PropTypes.func,\n        /** Disables changing month when click on days of other months (when hideExtraDays is false). Default = false */\n        disableMonthChange: PropTypes.bool,\n        /** Enable the option to swipe between months. Default: false */\n        enableSwipeMonths: PropTypes.bool,\n        /** Disable days by default. Default = false */\n        disabledByDefault: PropTypes.bool,\n        /** Style passed to the header */\n        headerStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number, PropTypes.array]),\n        /** Allow rendering of a totally custom header */\n        customHeader: PropTypes.any,\n        /** Allow selection of dates before minDate or after maxDate */\n        allowSelectionOutOfRange: PropTypes.bool\n    };\n    static defaultProps = {\n        enableSwipeMonths: false\n    };\n    state = {\n        currentMonth: this.props.current ? parseDate(this.props.current) : new XDate()\n    };\n    style = styleConstructor(this.props.theme);\n    header = React.createRef();\n    addMonth = (count) => {\n        this.updateMonth(this.state.currentMonth.clone().addMonths(count, true));\n    };\n    updateMonth = (day, doNotTriggerListeners = false) => {\n        if (day.toString('yyyy MM') === this.state.currentMonth.toString('yyyy MM')) {\n            return;\n        }\n        this.setState({ currentMonth: day.clone() }, () => {\n            if (!doNotTriggerListeners) {\n                const currMont = this.state.currentMonth.clone();\n                invoke(this.props, 'onMonthChange', xdateToData(currMont));\n                invoke(this.props, 'onVisibleMonthsChange', [xdateToData(currMont)]);\n            }\n        });\n    };\n    handleDayInteraction(date, interaction) {\n        const { disableMonthChange, allowSelectionOutOfRange } = this.props;\n        const day = parseDate(date);\n        const minDate = parseDate(this.props.minDate);\n        const maxDate = parseDate(this.props.maxDate);\n        if (allowSelectionOutOfRange || !(minDate && !isGTE(day, minDate)) && !(maxDate && !isLTE(day, maxDate))) {\n            const shouldUpdateMonth = disableMonthChange === undefined || !disableMonthChange;\n            if (shouldUpdateMonth) {\n                this.updateMonth(day);\n            }\n            if (interaction) {\n                interaction(xdateToData(day));\n            }\n        }\n    }\n    pressDay = (date) => {\n        this.handleDayInteraction(date, this.props.onDayPress);\n    };\n    longPressDay = (date) => {\n        this.handleDayInteraction(date, this.props.onDayLongPress);\n    };\n    swipeProps = { onSwipe: (direction) => this.onSwipe(direction) };\n    onSwipe = (gestureName) => {\n        const { SWIPE_UP, SWIPE_DOWN, SWIPE_LEFT, SWIPE_RIGHT } = swipeDirections;\n        switch (gestureName) {\n            case SWIPE_UP:\n            case SWIPE_DOWN:\n                break;\n            case SWIPE_LEFT:\n                this.onSwipeLeft();\n                break;\n            case SWIPE_RIGHT:\n                this.onSwipeRight();\n                break;\n        }\n    };\n    onSwipeLeft = () => {\n        this.header?.current?.onPressRight();\n    };\n    onSwipeRight = () => {\n        this.header?.current?.onPressLeft();\n    };\n    renderWeekNumber = memoize(weekNumber => {\n        return (<View style={this.style.dayContainer} key={`week-container-${weekNumber}`}>\n        <BasicDay key={`week-${weekNumber}`} marking={{ disabled: true, disableTouchEvent: true }} \n        // state='disabled'\n        theme={this.props.theme} testID={`${WEEK_NUMBER}-${weekNumber}`}>\n          {weekNumber}\n        </BasicDay>\n      </View>);\n    });\n    renderDay(day, id) {\n        const { hideExtraDays, markedDates } = this.props;\n        const dayProps = extractComponentProps(Day, this.props);\n        if (!sameMonth(new XDate(day), this.state.currentMonth) && hideExtraDays) {\n            return <View key={id} style={this.style.emptyDayContainer}/>;\n        }\n        return (<View style={this.style.dayContainer} key={id}>\n        <Day {...dayProps} day={day} state={getState(new XDate(day), this.state.currentMonth, this.props)} marking={markedDates?.[toMarkingFormat(new XDate(day))]} onPress={this.pressDay} onLongPress={this.longPressDay}/>\n      </View>);\n    }\n    renderWeek(days, id) {\n        const week = [];\n        days.forEach((day, id2) => {\n            week.push(this.renderDay(day, id2));\n        }, this);\n        if (this.props.showWeekNumbers) {\n            week.unshift(this.renderWeekNumber(days[days.length - 1].getWeek()));\n        }\n        return (<View style={this.style.week} key={id}>\n        {week}\n      </View>);\n    }\n    renderMonth() {\n        const { currentMonth } = this.state;\n        const { firstDay, showSixWeeks, hideExtraDays } = this.props;\n        const shouldShowSixWeeks = showSixWeeks && !hideExtraDays;\n        const days = page(currentMonth, firstDay, shouldShowSixWeeks);\n        const weeks = [];\n        while (days.length) {\n            weeks.push(this.renderWeek(days.splice(0, 7), weeks.length));\n        }\n        return <View style={this.style.monthView}>{weeks}</View>;\n    }\n    renderHeader() {\n        const { customHeader, headerStyle, displayLoadingIndicator, markedDates, testID } = this.props;\n        const current = parseDate(this.props.current);\n        let indicator;\n        if (current) {\n            const lastMonthOfDay = toMarkingFormat(current.clone().addMonths(1, true).setDate(1).addDays(-1));\n            if (displayLoadingIndicator && !markedDates?.[lastMonthOfDay]) {\n                indicator = true;\n            }\n        }\n        const headerProps = extractComponentProps(CalendarHeader, this.props);\n        const CustomHeader = customHeader;\n        const HeaderComponent = customHeader ? CustomHeader : CalendarHeader;\n        const ref = customHeader ? undefined : this.header;\n        return (<HeaderComponent {...headerProps} testID={testID} style={headerStyle} ref={ref} month={this.state.currentMonth} addMonth={this.addMonth} displayLoadingIndicator={indicator}/>);\n    }\n    render() {\n        const { enableSwipeMonths, style } = this.props;\n        const GestureComponent = enableSwipeMonths ? GestureRecognizer : View;\n        const gestureProps = enableSwipeMonths ? this.swipeProps : undefined;\n        return (<GestureComponent {...gestureProps}>\n        <View style={[this.style.container, style]} accessibilityElementsHidden={this.props.accessibilityElementsHidden} // iOS\n         importantForAccessibility={this.props.importantForAccessibility} // Android\n        >\n          {this.renderHeader()}\n          {this.renderMonth()}\n        </View>\n      </GestureComponent>);\n    }\n}\nexport default Calendar;\n"]},"metadata":{},"sourceType":"script"}