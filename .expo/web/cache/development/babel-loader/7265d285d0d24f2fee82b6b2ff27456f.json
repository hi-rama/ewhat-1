{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _reactNativeElements = require(\"react-native-elements\");\n\nvar _ExpiredTodo = _interopRequireDefault(require(\"../component/ExpiredTodo\"));\n\nvar _jsxFileName = \"D:\\\\merge\\\\please-attendence\\\\src\\\\components\\\\AppTitleHeader.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar _Dimensions$get = _reactNative.Dimensions.get('window'),\n    width = _Dimensions$get.width;\n\nvar AppTitleHeader = function (_React$Component) {\n  (0, _inherits2.default)(AppTitleHeader, _React$Component);\n\n  var _super = _createSuper(AppTitleHeader);\n\n  function AppTitleHeader(props) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, AppTitleHeader);\n    _this = _super.call(this, props);\n\n    _this.shouldComponentUpdate = function (nextProps, nextState) {\n      var isChanged = _this.props.expiredTodos !== nextProps.expiredTodos || _this.state !== nextState ? true : false;\n      return isChanged;\n    };\n\n    _this._toggleModalVisible = function () {\n      setTimeout(function () {\n        return _this.setState(function (prevState) {\n          return {\n            isModalVisible: !prevState.isModalVisible\n          };\n        });\n      }, 0);\n    };\n\n    _this._openClearAllAlert = function () {\n      _reactNative.Alert.alert('Delete All Expired Todo', 'Are you sure delete all expired todo?', [{\n        text: 'Cancel'\n      }, {\n        text: 'Ok',\n        onPress: function onPress() {\n          _this.props.deleteManyTodo(_this.props.expiredTodos);\n        }\n      }], {\n        cancelable: true\n      });\n    };\n\n    _this.state = {\n      isModalVisible: false\n    };\n    return _this;\n  }\n\n  (0, _createClass2.default)(AppTitleHeader, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return _react.default.createElement(_reactNative.View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 7\n        }\n      }, _react.default.createElement(_reactNative.Modal, {\n        transparent: true,\n        animationType: \"fade\",\n        visible: this.state.isModalVisible,\n        onRequestClose: this._toggleModalVisible,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 9\n        }\n      }, _react.default.createElement(_reactNative.View, {\n        style: styles.modalContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }\n      }, _react.default.createElement(_reactNative.View, {\n        style: styles.modal,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }\n      }, _react.default.createElement(_reactNative.TouchableOpacity, {\n        style: styles.modalCloseButton,\n        onPress: this._toggleModalVisible,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 15\n        }\n      }, _react.default.createElement(_reactNativeElements.Icon, {\n        name: \"close\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 17\n        }\n      })), _react.default.createElement(_reactNative.View, {\n        style: styles.modalContent,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 15\n        }\n      }, _react.default.createElement(_reactNative.View, {\n        style: styles.modalTitle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 17\n        }\n      }, _react.default.createElement(_reactNative.Text, {\n        style: styles.modalTitleText,\n        numberOfLines: 1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 19\n        }\n      }, \"Expired TODOs\")), _react.default.createElement(_reactNative.View, {\n        style: styles.modalScroll,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 17\n        }\n      }, _react.default.createElement(_reactNative.ScrollView, {\n        style: styles.modalScroll,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 19\n        }\n      }, this.props.expiredTodos.map(function (todo) {\n        return _react.default.createElement(_ExpiredTodo.default, {\n          todo: todo,\n          deleteTodo: _this2.props.deleteTodo,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 23\n          }\n        });\n      }))), _react.default.createElement(_reactNative.View, {\n        style: styles.modalButtonContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 17\n        }\n      }, _react.default.createElement(_reactNative.TouchableOpacity, {\n        onPress: this._openClearAllAlert,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 19\n        }\n      }, _react.default.createElement(_reactNative.Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }\n      }, \"Delete All\"))))))), _react.default.createElement(_reactNative.View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 9\n        }\n      }, _react.default.createElement(_reactNative.Text, {\n        style: styles.title,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }\n      }, \"TO-DO LIST\"), _react.default.createElement(_reactNative.TouchableOpacity, {\n        onPress: this._toggleModalVisible,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }\n      }, this.props.expiredTodos.length > 0 ? _react.default.createElement(_reactNativeElements.Badge, {\n        badgeStyle: styles.countBadgeText,\n        containerStyle: styles.countBadgeContainer,\n        value: this.props.expiredTodos.length,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 15\n        }\n      }) : _react.default.createElement(_reactNative.View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 15\n        }\n      }), _react.default.createElement(_reactNative.View, {\n        style: styles.notificationIconStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }\n      }, _react.default.createElement(_reactNativeElements.Icon, {\n        name: \"notifications\",\n        color: \"#fff\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 15\n        }\n      })))));\n    }\n  }]);\n  return AppTitleHeader;\n}(_react.default.Component);\n\nexports.default = AppTitleHeader;\n\nvar styles = _reactNative.StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginVertical: 30\n  },\n  title: {\n    fontSize: 40,\n    fontFamily: 'sans-serif-light',\n    color: '#fff',\n    marginHorizontal: 30\n  },\n  notificationIconStyle: {\n    padding: 5,\n    backgroundColor: '#00adca',\n    borderRadius: 30\n  },\n  modalContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: 'rgba(20,20,20,0.5)'\n  },\n  modal: {\n    flex: 1,\n    width: width - 50,\n    justifyContent: 'center',\n    alignSelf: 'center',\n    backgroundColor: '#ffffff',\n    padding: 30,\n    marginVertical: 100,\n    elevation: 5\n  },\n  modalCloseButton: {\n    flex: 1,\n    alignSelf: 'flex-end',\n    marginBottom: 10\n  },\n  modalContent: {\n    flex: 10,\n    alignItems: 'center'\n  },\n  modalTitle: {\n    flex: 1,\n    backgroundColor: '#00adca',\n    borderRadius: 10,\n    margin: 10,\n    padding: 10,\n    paddingHorizontal: 20,\n    elevation: 3\n  },\n  modalTitleText: {\n    color: '#fff',\n    textAlign: 'center',\n    textAlignVertical: 'center',\n    fontSize: 24,\n    fontFamily: 'sans-serif-light'\n  },\n  modalScroll: {\n    flex: 5,\n    marginBottom: 10\n  },\n  modalButtonContainer: {\n    flex: 1\n  },\n  countBadgeText: {\n    flex: 1,\n    backgroundColor: 'red'\n  },\n  countBadgeContainer: {\n    position: 'absolute',\n    top: -6,\n    right: -6,\n    zIndex: 10\n  }\n});","map":{"version":3,"sources":["D:/merge/please-attendence/src/components/AppTitleHeader.js"],"names":["Dimensions","get","width","AppTitleHeader","props","shouldComponentUpdate","nextProps","nextState","isChanged","expiredTodos","state","_toggleModalVisible","setTimeout","setState","prevState","isModalVisible","_openClearAllAlert","Alert","alert","text","onPress","deleteManyTodo","cancelable","styles","modalContainer","modal","modalCloseButton","modalContent","modalTitle","modalTitleText","modalScroll","map","todo","deleteTodo","modalButtonContainer","container","title","length","countBadgeText","countBadgeContainer","notificationIconStyle","React","Component","StyleSheet","create","flexDirection","alignItems","justifyContent","marginVertical","fontSize","fontFamily","color","marginHorizontal","padding","backgroundColor","borderRadius","flex","alignSelf","elevation","marginBottom","margin","paddingHorizontal","textAlign","textAlignVertical","position","top","right","zIndex"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n  TouchableOpacity,\r\n  Alert,\r\n  Modal,\r\n  Dimensions,\r\n  ScrollView,\r\n} from 'react-native';\r\nimport {Icon, Badge} from 'react-native-elements';\r\nimport ExpiredTodo from '../component/ExpiredTodo';\r\n\r\nconst {width} = Dimensions.get('window'); // current app width\r\n\r\nexport default class AppTitleHeader extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isModalVisible: false,\r\n    };\r\n  }\r\n\r\n  //update todo compoent when props or state changed\r\n  shouldComponentUpdate = (nextProps, nextState) => {\r\n    const isChanged =\r\n      this.props.expiredTodos !== nextProps.expiredTodos ||\r\n      this.state !== nextState\r\n        ? true\r\n        : false;\r\n    return isChanged;\r\n  };\r\n\r\n  // change modal visible that show expired todo's list\r\n  _toggleModalVisible = () => {\r\n    setTimeout(\r\n      () =>\r\n        this.setState(prevState => {\r\n          return {\r\n            isModalVisible: !prevState.isModalVisible,\r\n          };\r\n        }),\r\n      0,\r\n    );\r\n  };\r\n\r\n  // Are you sure delete all expired todos?\r\n  _openClearAllAlert = () => {\r\n    Alert.alert(\r\n      'Delete All Expired Todo',\r\n      'Are you sure delete all expired todo?',\r\n      [\r\n        {text: 'Cancel'},\r\n        {\r\n          text: 'Ok',\r\n          onPress: () => {\r\n            this.props.deleteManyTodo(this.props.expiredTodos);\r\n          },\r\n        },\r\n      ],\r\n      {cancelable: true},\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <View>\r\n        <Modal\r\n          transparent={true}\r\n          animationType=\"fade\"\r\n          visible={this.state.isModalVisible}\r\n          onRequestClose={this._toggleModalVisible}>\r\n          <View style={styles.modalContainer}>\r\n            <View style={styles.modal}>\r\n              <TouchableOpacity\r\n                style={styles.modalCloseButton}\r\n                onPress={this._toggleModalVisible}>\r\n                <Icon name=\"close\" />\r\n              </TouchableOpacity>\r\n              <View style={styles.modalContent}>\r\n                <View style={styles.modalTitle}>\r\n                  <Text style={styles.modalTitleText} numberOfLines={1}>\r\n                    Expired TODOs\r\n                  </Text>\r\n                </View>\r\n                <View style={styles.modalScroll}>\r\n                  <ScrollView style={styles.modalScroll}>\r\n                    {this.props.expiredTodos.map(todo => (\r\n                      <ExpiredTodo\r\n                        todo={todo}\r\n                        deleteTodo={this.props.deleteTodo}\r\n                      />\r\n                    ))}\r\n                  </ScrollView>\r\n                </View>\r\n                <View style={styles.modalButtonContainer}>\r\n                  <TouchableOpacity onPress={this._openClearAllAlert}>\r\n                    <Text>Delete All</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        <View style={styles.container}>\r\n          <Text style={styles.title}>TO-DO LIST</Text>\r\n          <TouchableOpacity onPress={this._toggleModalVisible}>\r\n            {this.props.expiredTodos.length > 0 ? (\r\n              <Badge\r\n                badgeStyle={styles.countBadgeText}\r\n                containerStyle={styles.countBadgeContainer}\r\n                value={this.props.expiredTodos.length}\r\n              />\r\n            ) : (\r\n              <View />\r\n            )}\r\n            <View style={styles.notificationIconStyle}>\r\n              <Icon name=\"notifications\" color=\"#fff\" />\r\n            </View>\r\n          </TouchableOpacity>\r\n        </View>\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    marginVertical: 30,\r\n  },\r\n  title: {\r\n    fontSize: 40,\r\n    fontFamily: 'sans-serif-light',\r\n    color: '#fff',\r\n    marginHorizontal: 30,\r\n  },\r\n  notificationIconStyle: {\r\n    padding: 5,\r\n    backgroundColor: '#00adca',\r\n    borderRadius: 30,\r\n  },\r\n  modalContainer: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundColor: 'rgba(20,20,20,0.5)',\r\n  },\r\n  modal: {\r\n    flex: 1,\r\n    width: width - 50,\r\n    justifyContent: 'center',\r\n    alignSelf: 'center',\r\n    backgroundColor: '#ffffff',\r\n    padding: 30,\r\n    marginVertical: 100,\r\n    elevation: 5,\r\n  },\r\n  modalCloseButton: {\r\n    flex: 1,\r\n    alignSelf: 'flex-end',\r\n    marginBottom: 10,\r\n  },\r\n  modalContent: {\r\n    flex: 10,\r\n    alignItems: 'center',\r\n  },\r\n  modalTitle: {\r\n    flex: 1,\r\n    backgroundColor: '#00adca',\r\n    borderRadius: 10,\r\n    margin: 10,\r\n    padding: 10,\r\n    paddingHorizontal: 20,\r\n    elevation: 3,\r\n  },\r\n  modalTitleText: {\r\n    color: '#fff',\r\n    textAlign: 'center',\r\n    textAlignVertical: 'center',\r\n    fontSize: 24,\r\n    fontFamily: 'sans-serif-light',\r\n  },\r\n  modalScroll: {\r\n    flex: 5,\r\n    marginBottom: 10,\r\n  },\r\n  modalButtonContainer: {\r\n    flex: 1,\r\n  },\r\n  countBadgeText: {\r\n    flex: 1,\r\n    backgroundColor: 'red',\r\n  },\r\n  countBadgeContainer: {\r\n    position: 'absolute',\r\n    top: -6,\r\n    right: -6,\r\n    zIndex: 10,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"script"}