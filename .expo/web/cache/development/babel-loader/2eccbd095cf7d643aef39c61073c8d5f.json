{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _theme = require(\"../theme\");\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _IconButton = _interopRequireDefault(require(\"./IconButton\"));\n\nvar _image = require(\"./image\");\n\nvar _Input = _interopRequireDefault(require(\"./Input\"));\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\merge\\\\please-attendence\\\\src\\\\components\\\\Main\\\\Task.js\";\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nvar Task = function Task(_ref) {\n  var item = _ref.item,\n      deleteTask = _ref.deleteTask,\n      toggleTask = _ref.toggleTask,\n      updateTask = _ref.updateTask;\n\n  var _useState = (0, _react.useState)(false),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      isEditing = _useState2[0],\n      setIsEditing = _useState2[1];\n\n  var _useState3 = (0, _react.useState)(item.text),\n      _useState4 = (0, _slicedToArray2.default)(_useState3, 2),\n      text = _useState4[0],\n      setText = _useState4[1];\n\n  var _handleUpdateButtonPress = function _handleUpdateButtonPress() {\n    setIsEditing(true);\n  };\n\n  var _onSubmitEditing = function _onSubmitEditing() {\n    if (isEditing) {\n      var editedTask = (0, _extends2.default)({}, item, {\n        text: text\n      });\n      setIsEditing(false);\n      updateTask(editedTask);\n    }\n  };\n\n  var _onBlur = function _onBlur() {\n    if (isEditing) {\n      setIsEditing(false);\n      setText(item.text);\n    }\n  };\n\n  return isEditing ? _react.default.createElement(_Input.default, {\n    value: text,\n    onChangeText: function onChangeText(text) {\n      return setText(text);\n    },\n    onSubmitEditing: _onSubmitEditing,\n    onBlur: _onBlur,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }) : _react.default.createElement(_reactNative.View, {\n    style: taskStyle.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, _react.default.createElement(_IconButton.default, {\n    style: taskStyle.contents,\n    type: item.completed ? _image.images.completed : _image.images.uncompleted,\n    id: item.id,\n    onPressOut: toggleTask,\n    completed: item.completed,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }), _react.default.createElement(_reactNative.Text, {\n    style: [taskStyle.contents, {\n      textDecorationLine: item.completed ? 'line-through' : 'none'\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, item.text), item.completed || _react.default.createElement(_IconButton.default, {\n    type: _image.images.update,\n    onPressOut: _handleUpdateButtonPress,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 32\n    }\n  }), _react.default.createElement(_IconButton.default, {\n    type: _image.images.delete,\n    id: item.id,\n    onPressOut: deleteTask,\n    completed: item.completed,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }));\n};\n\nvar taskStyle = _reactNative.StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    backgroundColor: _theme.theme.itemBackground,\n    borderRadius: 10,\n    padding: 5,\n    marginTop: 3,\n    marginLeft: 5\n  },\n  contents: {\n    flex: 1,\n    fontSize: 24,\n    marginLeft: 10,\n    width: '10%'\n  }\n});\n\nTask.propTypes = {\n  item: _propTypes.default.object.isRequired,\n  deleteTask: _propTypes.default.func.isRequired,\n  toggleTask: _propTypes.default.func.isRequired,\n  selectTask: _propTypes.default.func.isRequired\n};\nvar _default = Task;\nexports.default = _default;","map":{"version":3,"sources":["D:/merge/please-attendence/src/components/Main/Task.js"],"names":["Task","item","deleteTask","toggleTask","updateTask","isEditing","setIsEditing","text","setText","_handleUpdateButtonPress","_onSubmitEditing","editedTask","_onBlur","taskStyle","container","contents","completed","images","uncompleted","id","textDecorationLine","update","delete","StyleSheet","create","flexDirection","alignItems","backgroundColor","theme","itemBackground","borderRadius","padding","marginTop","marginLeft","flex","fontSize","width","propTypes","PropTypes","object","isRequired","func","selectTask"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport {StyleSheet, View, Text} from 'react-native';\nimport { theme } from '../theme';\nimport PropTypes from 'prop-types';\nimport IconButton from './IconButton';\nimport { images } from './image';\nimport Input from './Input';\n\nconst Task = ({ item, deleteTask, toggleTask, updateTask }) => {\n    const [isEditing, setIsEditing] = useState(false);\n    const [text, setText] = useState(item.text);\n   \n    const _handleUpdateButtonPress = () => {\n        setIsEditing(true);\n    };\n    const _onSubmitEditing = () => {\n        if(isEditing){\n            const editedTask = Object.assign({}, item, {text});\n            setIsEditing(false);\n            updateTask(editedTask);\n        }\n    };\n    const _onBlur = () => {\n        if(isEditing) {\n            setIsEditing(false);\n            setText(item.text);\n        }\n    };\n\n    return isEditing ? (\n        <Input value={text} onChangeText={text => setText(text)}\n        onSubmitEditing={_onSubmitEditing} onBlur={_onBlur}/>\n    ):(\n        <View style = {taskStyle.container}>\n            <IconButton \n            style={taskStyle.contents}\n            type={item.completed ? images.completed : images.uncompleted}\n            id = {item.id} onPressOut = {toggleTask} completed={item.completed}/>\n            <Text style={[taskStyle.contents,\n            {textDecorationLine: (item.completed ? 'line-through' : 'none')}]}>\n            {item.text}</Text>\n            {item.completed || <IconButton type={images.update}\n            onPressOut={_handleUpdateButtonPress}/>}\n            <IconButton \n            type={images.delete} \n            id={item.id} onPressOut={deleteTask}\n            completed={item.completed}/>\n        </View>\n\n    );\n};\n\nconst taskStyle = StyleSheet.create({\n    container:{\n        flexDirection: 'row',\n        alignItems: 'center',\n        backgroundColor: theme.itemBackground,\n        borderRadius: 10,\n        padding: 5,\n        marginTop: 3,\n        marginLeft: 5,\n    },\n    contents:{\n        flex: 1,\n        fontSize: 24,\n        marginLeft : 10,\n        width:'10%'\n    },\n    \n});\nTask.propTypes = {\n    item : PropTypes.object.isRequired,\n    deleteTask: PropTypes.func.isRequired,\n    toggleTask: PropTypes.func.isRequired,\n    selectTask: PropTypes.func.isRequired,\n};\nexport default Task;\n"]},"metadata":{},"sourceType":"script"}